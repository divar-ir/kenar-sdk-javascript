/**
 * Kenar API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AddonsAddonLinkage from './AddonsAddonLinkage';
import AddonsAddonMetaData from './AddonsAddonMetaData';
import AddonsAddonSecondaryLinks from './AddonsAddonSecondaryLinks';
import AddonsAddonSelector from './AddonsAddonSelector';
import AddonsAddonSemantic from './AddonsAddonSemantic';
import AppsApp from './AppsApp';

/**
 * The AddonsPostAddon model module.
 * @module model/AddonsPostAddon
 * @version 0.1.0
 */
class AddonsPostAddon {
    /**
     * Constructs a new <code>AddonsPostAddon</code>.
     * @alias module:model/AddonsPostAddon
     */
    constructor() { 
        
        AddonsPostAddon.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AddonsPostAddon</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AddonsPostAddon} obj Optional instance to populate.
     * @return {module:model/AddonsPostAddon} The populated <code>AddonsPostAddon</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AddonsPostAddon();

            if (data.hasOwnProperty('app')) {
                obj['app'] = AppsApp.constructFromObject(data['app']);
            }
            if (data.hasOwnProperty('linkage')) {
                obj['linkage'] = AddonsAddonLinkage.constructFromObject(data['linkage']);
            }
            if (data.hasOwnProperty('meta_data')) {
                obj['meta_data'] = AddonsAddonMetaData.constructFromObject(data['meta_data']);
            }
            if (data.hasOwnProperty('score')) {
                obj['score'] = ApiClient.convertToType(data['score'], 'String');
            }
            if (data.hasOwnProperty('secondary_links')) {
                obj['secondary_links'] = AddonsAddonSecondaryLinks.constructFromObject(data['secondary_links']);
            }
            if (data.hasOwnProperty('selector')) {
                obj['selector'] = AddonsAddonSelector.constructFromObject(data['selector']);
            }
            if (data.hasOwnProperty('semantic')) {
                obj['semantic'] = ApiClient.convertToType(data['semantic'], {'String': 'String'});
            }
            if (data.hasOwnProperty('semantic_data')) {
                obj['semantic_data'] = AddonsAddonSemantic.constructFromObject(data['semantic_data']);
            }
            if (data.hasOwnProperty('semantic_sensitives')) {
                obj['semantic_sensitives'] = ApiClient.convertToType(data['semantic_sensitives'], ['String']);
            }
            if (data.hasOwnProperty('sensitive_semantic')) {
                obj['sensitive_semantic'] = ApiClient.convertToType(data['sensitive_semantic'], {'String': 'String'});
            }
            if (data.hasOwnProperty('token')) {
                obj['token'] = ApiClient.convertToType(data['token'], 'String');
            }
            if (data.hasOwnProperty('widgets')) {
                obj['widgets'] = ApiClient.convertToType(data['widgets'], Object);
            }
            if (data.hasOwnProperty('widgets_semantic')) {
                obj['widgets_semantic'] = ApiClient.convertToType(data['widgets_semantic'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AddonsPostAddon</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AddonsPostAddon</code>.
     */
    static validateJSON(data) {
        // validate the optional field `app`
        if (data['app']) { // data not null
          AppsApp.validateJSON(data['app']);
        }
        // validate the optional field `meta_data`
        if (data['meta_data']) { // data not null
          AddonsAddonMetaData.validateJSON(data['meta_data']);
        }
        // ensure the json data is a string
        if (data['score'] && !(typeof data['score'] === 'string' || data['score'] instanceof String)) {
            throw new Error("Expected the field `score` to be a primitive type in the JSON string but got " + data['score']);
        }
        // validate the optional field `secondary_links`
        if (data['secondary_links']) { // data not null
          AddonsAddonSecondaryLinks.validateJSON(data['secondary_links']);
        }
        // validate the optional field `selector`
        if (data['selector']) { // data not null
          AddonsAddonSelector.validateJSON(data['selector']);
        }
        // validate the optional field `semantic_data`
        if (data['semantic_data']) { // data not null
          AddonsAddonSemantic.validateJSON(data['semantic_data']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['semantic_sensitives'])) {
            throw new Error("Expected the field `semantic_sensitives` to be an array in the JSON data but got " + data['semantic_sensitives']);
        }
        // ensure the json data is a string
        if (data['token'] && !(typeof data['token'] === 'string' || data['token'] instanceof String)) {
            throw new Error("Expected the field `token` to be a primitive type in the JSON string but got " + data['token']);
        }

        return true;
    }

/**
     * @return {module:model/AppsApp}
     */
    getApp() {
        return this.app;
    }

    /**
     * @param {module:model/AppsApp} app
     */
    setApp(app) {
        this['app'] = app;
    }
/**
     * @return {module:model/AddonsAddonLinkage}
     */
    getLinkage() {
        return this.linkage;
    }

    /**
     * @param {module:model/AddonsAddonLinkage} linkage
     */
    setLinkage(linkage) {
        this['linkage'] = linkage;
    }
/**
     * @return {module:model/AddonsAddonMetaData}
     */
    getMetaData() {
        return this.meta_data;
    }

    /**
     * @param {module:model/AddonsAddonMetaData} metaData
     */
    setMetaData(metaData) {
        this['meta_data'] = metaData;
    }
/**
     * @return {String}
     */
    getScore() {
        return this.score;
    }

    /**
     * @param {String} score
     */
    setScore(score) {
        this['score'] = score;
    }
/**
     * @return {module:model/AddonsAddonSecondaryLinks}
     */
    getSecondaryLinks() {
        return this.secondary_links;
    }

    /**
     * @param {module:model/AddonsAddonSecondaryLinks} secondaryLinks
     */
    setSecondaryLinks(secondaryLinks) {
        this['secondary_links'] = secondaryLinks;
    }
/**
     * @return {module:model/AddonsAddonSelector}
     */
    getSelector() {
        return this.selector;
    }

    /**
     * @param {module:model/AddonsAddonSelector} selector
     */
    setSelector(selector) {
        this['selector'] = selector;
    }
/**
     * @return {Object.<String, String>}
     */
    getSemantic() {
        return this.semantic;
    }

    /**
     * @param {Object.<String, String>} semantic
     */
    setSemantic(semantic) {
        this['semantic'] = semantic;
    }
/**
     * @return {module:model/AddonsAddonSemantic}
     */
    getSemanticData() {
        return this.semantic_data;
    }

    /**
     * @param {module:model/AddonsAddonSemantic} semanticData
     */
    setSemanticData(semanticData) {
        this['semantic_data'] = semanticData;
    }
/**
     * @return {Array.<String>}
     */
    getSemanticSensitives() {
        return this.semantic_sensitives;
    }

    /**
     * @param {Array.<String>} semanticSensitives
     */
    setSemanticSensitives(semanticSensitives) {
        this['semantic_sensitives'] = semanticSensitives;
    }
/**
     * @return {Object.<String, String>}
     */
    getSensitiveSemantic() {
        return this.sensitive_semantic;
    }

    /**
     * @param {Object.<String, String>} sensitiveSemantic
     */
    setSensitiveSemantic(sensitiveSemantic) {
        this['sensitive_semantic'] = sensitiveSemantic;
    }
/**
     * @return {String}
     */
    getToken() {
        return this.token;
    }

    /**
     * @param {String} token
     */
    setToken(token) {
        this['token'] = token;
    }
/**
     * @return {Object}
     */
    getWidgets() {
        return this.widgets;
    }

    /**
     * @param {Object} widgets
     */
    setWidgets(widgets) {
        this['widgets'] = widgets;
    }
/**
     * @return {Object}
     */
    getWidgetsSemantic() {
        return this.widgets_semantic;
    }

    /**
     * @param {Object} widgetsSemantic
     */
    setWidgetsSemantic(widgetsSemantic) {
        this['widgets_semantic'] = widgetsSemantic;
    }

}



/**
 * @member {module:model/AppsApp} app
 */
AddonsPostAddon.prototype['app'] = undefined;

/**
 * @member {module:model/AddonsAddonLinkage} linkage
 */
AddonsPostAddon.prototype['linkage'] = undefined;

/**
 * @member {module:model/AddonsAddonMetaData} meta_data
 */
AddonsPostAddon.prototype['meta_data'] = undefined;

/**
 * @member {String} score
 */
AddonsPostAddon.prototype['score'] = undefined;

/**
 * @member {module:model/AddonsAddonSecondaryLinks} secondary_links
 */
AddonsPostAddon.prototype['secondary_links'] = undefined;

/**
 * @member {module:model/AddonsAddonSelector} selector
 */
AddonsPostAddon.prototype['selector'] = undefined;

/**
 * @member {Object.<String, String>} semantic
 */
AddonsPostAddon.prototype['semantic'] = undefined;

/**
 * @member {module:model/AddonsAddonSemantic} semantic_data
 */
AddonsPostAddon.prototype['semantic_data'] = undefined;

/**
 * @member {Array.<String>} semantic_sensitives
 */
AddonsPostAddon.prototype['semantic_sensitives'] = undefined;

/**
 * @member {Object.<String, String>} sensitive_semantic
 */
AddonsPostAddon.prototype['sensitive_semantic'] = undefined;

/**
 * @member {String} token
 */
AddonsPostAddon.prototype['token'] = undefined;

/**
 * @member {Object} widgets
 */
AddonsPostAddon.prototype['widgets'] = undefined;

/**
 * @member {Object} widgets_semantic
 */
AddonsPostAddon.prototype['widgets_semantic'] = undefined;






export default AddonsPostAddon;

