/**
 * divar_interface/open_platform/chatapi/chatapi.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AddonsAction from './AddonsAction';
import DivarIconsIconName from './DivarIconsIconName';

/**
 * The ChatapiChatButton model module.
 * @module model/ChatapiChatButton
 * @version version not set
 */
class ChatapiChatButton {
    /**
     * Constructs a new <code>ChatapiChatButton</code>.
     * @alias module:model/ChatapiChatButton
     */
    constructor() { 
        
        ChatapiChatButton.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ChatapiChatButton</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ChatapiChatButton} obj Optional instance to populate.
     * @return {module:model/ChatapiChatButton} The populated <code>ChatapiChatButton</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ChatapiChatButton();

            if (data.hasOwnProperty('action')) {
                obj['action'] = AddonsAction.constructFromObject(data['action']);
            }
            if (data.hasOwnProperty('icon_name')) {
                obj['icon_name'] = ApiClient.convertToType(data['icon_name'], 'String');
            }
            if (data.hasOwnProperty('caption')) {
                obj['caption'] = ApiClient.convertToType(data['caption'], 'String');
            }
            if (data.hasOwnProperty('icon')) {
                obj['icon'] = DivarIconsIconName.constructFromObject(data['icon']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ChatapiChatButton</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ChatapiChatButton</code>.
     */
    static validateJSON(data) {
        // validate the optional field `action`
        if (data['action']) { // data not null
          AddonsAction.validateJSON(data['action']);
        }
        // ensure the json data is a string
        if (data['icon_name'] && !(typeof data['icon_name'] === 'string' || data['icon_name'] instanceof String)) {
            throw new Error("Expected the field `icon_name` to be a primitive type in the JSON string but got " + data['icon_name']);
        }
        // ensure the json data is a string
        if (data['caption'] && !(typeof data['caption'] === 'string' || data['caption'] instanceof String)) {
            throw new Error("Expected the field `caption` to be a primitive type in the JSON string but got " + data['caption']);
        }

        return true;
    }


}



/**
 * @member {module:model/AddonsAction} action
 */
ChatapiChatButton.prototype['action'] = undefined;

/**
 * @member {String} icon_name
 */
ChatapiChatButton.prototype['icon_name'] = undefined;

/**
 * @member {String} caption
 */
ChatapiChatButton.prototype['caption'] = undefined;

/**
 * @member {module:model/DivarIconsIconName} icon
 */
ChatapiChatButton.prototype['icon'] = undefined;






export default ChatapiChatButton;

