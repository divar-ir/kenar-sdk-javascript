/**
 * Kenar API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The FinderGetUserPostsResponsePost model module.
 * @module model/FinderGetUserPostsResponsePost
 * @version 0.1.0
 */
class FinderGetUserPostsResponsePost {
    /**
     * Constructs a new <code>FinderGetUserPostsResponsePost</code>.
     * @alias module:model/FinderGetUserPostsResponsePost
     */
    constructor() { 
        
        FinderGetUserPostsResponsePost.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FinderGetUserPostsResponsePost</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FinderGetUserPostsResponsePost} obj Optional instance to populate.
     * @return {module:model/FinderGetUserPostsResponsePost} The populated <code>FinderGetUserPostsResponsePost</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FinderGetUserPostsResponsePost();

            if (data.hasOwnProperty('category')) {
                obj['category'] = ApiClient.convertToType(data['category'], 'String');
            }
            if (data.hasOwnProperty('images')) {
                obj['images'] = ApiClient.convertToType(data['images'], ['String']);
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('token')) {
                obj['token'] = ApiClient.convertToType(data['token'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FinderGetUserPostsResponsePost</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FinderGetUserPostsResponsePost</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['category'] && !(typeof data['category'] === 'string' || data['category'] instanceof String)) {
            throw new Error("Expected the field `category` to be a primitive type in the JSON string but got " + data['category']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['images'])) {
            throw new Error("Expected the field `images` to be an array in the JSON data but got " + data['images']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }
        // ensure the json data is a string
        if (data['token'] && !(typeof data['token'] === 'string' || data['token'] instanceof String)) {
            throw new Error("Expected the field `token` to be a primitive type in the JSON string but got " + data['token']);
        }

        return true;
    }

/**
     * @return {String}
     */
    getCategory() {
        return this.category;
    }

    /**
     * @param {String} category
     */
    setCategory(category) {
        this['category'] = category;
    }
/**
     * @return {Array.<String>}
     */
    getImages() {
        return this.images;
    }

    /**
     * @param {Array.<String>} images
     */
    setImages(images) {
        this['images'] = images;
    }
/**
     * @return {String}
     */
    getTitle() {
        return this.title;
    }

    /**
     * @param {String} title
     */
    setTitle(title) {
        this['title'] = title;
    }
/**
     * @return {String}
     */
    getToken() {
        return this.token;
    }

    /**
     * @param {String} token
     */
    setToken(token) {
        this['token'] = token;
    }

}



/**
 * @member {String} category
 */
FinderGetUserPostsResponsePost.prototype['category'] = undefined;

/**
 * @member {Array.<String>} images
 */
FinderGetUserPostsResponsePost.prototype['images'] = undefined;

/**
 * @member {String} title
 */
FinderGetUserPostsResponsePost.prototype['title'] = undefined;

/**
 * @member {String} token
 */
FinderGetUserPostsResponsePost.prototype['token'] = undefined;






export default FinderGetUserPostsResponsePost;

