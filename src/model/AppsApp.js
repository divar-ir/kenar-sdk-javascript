/**
 * Kenar API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AppsAppStatus from './AppsAppStatus';
import AppsServiceTag from './AppsServiceTag';
import AppsServiceType from './AppsServiceType';

/**
 * The AppsApp model module.
 * @module model/AppsApp
 * @version 0.1.0
 */
class AppsApp {
    /**
     * Constructs a new <code>AppsApp</code>.
     * @alias module:model/AppsApp
     */
    constructor() { 
        
        AppsApp.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AppsApp</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AppsApp} obj Optional instance to populate.
     * @return {module:model/AppsApp} The populated <code>AppsApp</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AppsApp();

            if (data.hasOwnProperty('slug')) {
                obj['slug'] = ApiClient.convertToType(data['slug'], 'String');
            }
            if (data.hasOwnProperty('display')) {
                obj['display'] = ApiClient.convertToType(data['display'], 'String');
            }
            if (data.hasOwnProperty('avatar')) {
                obj['avatar'] = ApiClient.convertToType(data['avatar'], 'String');
            }
            if (data.hasOwnProperty('divar_identification_key')) {
                obj['divar_identification_key'] = ApiClient.convertToType(data['divar_identification_key'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = AppsAppStatus.constructFromObject(data['status']);
            }
            if (data.hasOwnProperty('service_type')) {
                obj['service_type'] = AppsServiceType.constructFromObject(data['service_type']);
            }
            if (data.hasOwnProperty('service_tags')) {
                obj['service_tags'] = ApiClient.convertToType(data['service_tags'], [AppsServiceTag]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AppsApp</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AppsApp</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['slug'] && !(typeof data['slug'] === 'string' || data['slug'] instanceof String)) {
            throw new Error("Expected the field `slug` to be a primitive type in the JSON string but got " + data['slug']);
        }
        // ensure the json data is a string
        if (data['display'] && !(typeof data['display'] === 'string' || data['display'] instanceof String)) {
            throw new Error("Expected the field `display` to be a primitive type in the JSON string but got " + data['display']);
        }
        // ensure the json data is a string
        if (data['avatar'] && !(typeof data['avatar'] === 'string' || data['avatar'] instanceof String)) {
            throw new Error("Expected the field `avatar` to be a primitive type in the JSON string but got " + data['avatar']);
        }
        // ensure the json data is a string
        if (data['divar_identification_key'] && !(typeof data['divar_identification_key'] === 'string' || data['divar_identification_key'] instanceof String)) {
            throw new Error("Expected the field `divar_identification_key` to be a primitive type in the JSON string but got " + data['divar_identification_key']);
        }
        // validate the optional field `status`
        if (data['status']) { // data not null
          AppsAppStatus.validateJSON(data['status']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['service_tags'])) {
            throw new Error("Expected the field `service_tags` to be an array in the JSON data but got " + data['service_tags']);
        }

        return true;
    }

/**
     * @return {String}
     */
    getSlug() {
        return this.slug;
    }

    /**
     * @param {String} slug
     */
    setSlug(slug) {
        this['slug'] = slug;
    }
/**
     * @return {String}
     */
    getDisplay() {
        return this.display;
    }

    /**
     * @param {String} display
     */
    setDisplay(display) {
        this['display'] = display;
    }
/**
     * @return {String}
     */
    getAvatar() {
        return this.avatar;
    }

    /**
     * @param {String} avatar
     */
    setAvatar(avatar) {
        this['avatar'] = avatar;
    }
/**
     * @return {String}
     */
    getDivarIdentificationKey() {
        return this.divar_identification_key;
    }

    /**
     * @param {String} divarIdentificationKey
     */
    setDivarIdentificationKey(divarIdentificationKey) {
        this['divar_identification_key'] = divarIdentificationKey;
    }
/**
     * @return {module:model/AppsAppStatus}
     */
    getStatus() {
        return this.status;
    }

    /**
     * @param {module:model/AppsAppStatus} status
     */
    setStatus(status) {
        this['status'] = status;
    }
/**
     * @return {module:model/AppsServiceType}
     */
    getServiceType() {
        return this.service_type;
    }

    /**
     * @param {module:model/AppsServiceType} serviceType
     */
    setServiceType(serviceType) {
        this['service_type'] = serviceType;
    }
/**
     * @return {Array.<module:model/AppsServiceTag>}
     */
    getServiceTags() {
        return this.service_tags;
    }

    /**
     * @param {Array.<module:model/AppsServiceTag>} serviceTags
     */
    setServiceTags(serviceTags) {
        this['service_tags'] = serviceTags;
    }

}



/**
 * @member {String} slug
 */
AppsApp.prototype['slug'] = undefined;

/**
 * @member {String} display
 */
AppsApp.prototype['display'] = undefined;

/**
 * @member {String} avatar
 */
AppsApp.prototype['avatar'] = undefined;

/**
 * @member {String} divar_identification_key
 */
AppsApp.prototype['divar_identification_key'] = undefined;

/**
 * @member {module:model/AppsAppStatus} status
 */
AppsApp.prototype['status'] = undefined;

/**
 * @member {module:model/AppsServiceType} service_type
 */
AppsApp.prototype['service_type'] = undefined;

/**
 * @member {Array.<module:model/AppsServiceTag>} service_tags
 */
AppsApp.prototype['service_tags'] = undefined;






export default AppsApp;

