/**
 * divar_interface/open_platform/chatapi/chatapi.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AddonsAddonMetaData from './AddonsAddonMetaData';

/**
 * The AddonsBusinessAddon model module.
 * @module model/AddonsBusinessAddon
 * @version 0.1.0
 */
class AddonsBusinessAddon {
    /**
     * Constructs a new <code>AddonsBusinessAddon</code>.
     * @alias module:model/AddonsBusinessAddon
     */
    constructor() { 
        
        AddonsBusinessAddon.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AddonsBusinessAddon</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AddonsBusinessAddon} obj Optional instance to populate.
     * @return {module:model/AddonsBusinessAddon} The populated <code>AddonsBusinessAddon</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AddonsBusinessAddon();

            if (data.hasOwnProperty('meta_data')) {
                obj['meta_data'] = AddonsAddonMetaData.constructFromObject(data['meta_data']);
            }
            if (data.hasOwnProperty('business_ref')) {
                obj['business_ref'] = ApiClient.convertToType(data['business_ref'], 'String');
            }
            if (data.hasOwnProperty('widgets')) {
                obj['widgets'] = ApiClient.convertToType(data['widgets'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AddonsBusinessAddon</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AddonsBusinessAddon</code>.
     */
    static validateJSON(data) {
        // validate the optional field `meta_data`
        if (data['meta_data']) { // data not null
          AddonsAddonMetaData.validateJSON(data['meta_data']);
        }
        // ensure the json data is a string
        if (data['business_ref'] && !(typeof data['business_ref'] === 'string' || data['business_ref'] instanceof String)) {
            throw new Error("Expected the field `business_ref` to be a primitive type in the JSON string but got " + data['business_ref']);
        }

        return true;
    }

/**
     * @return {module:model/AddonsAddonMetaData}
     */
    getMetaData() {
        return this.meta_data;
    }

    /**
     * @param {module:model/AddonsAddonMetaData} metaData
     */
    setMetaData(metaData) {
        this['meta_data'] = metaData;
    }
/**
     * @return {String}
     */
    getBusinessRef() {
        return this.business_ref;
    }

    /**
     * @param {String} businessRef
     */
    setBusinessRef(businessRef) {
        this['business_ref'] = businessRef;
    }
/**
     * @return {Object}
     */
    getWidgets() {
        return this.widgets;
    }

    /**
     * @param {Object} widgets
     */
    setWidgets(widgets) {
        this['widgets'] = widgets;
    }

}



/**
 * @member {module:model/AddonsAddonMetaData} meta_data
 */
AddonsBusinessAddon.prototype['meta_data'] = undefined;

/**
 * @member {String} business_ref
 */
AddonsBusinessAddon.prototype['business_ref'] = undefined;

/**
 * @member {Object} widgets
 */
AddonsBusinessAddon.prototype['widgets'] = undefined;






export default AddonsBusinessAddon;

