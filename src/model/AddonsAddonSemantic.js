/**
 * Kenar API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AddonSemanticCarVerificationStage from './AddonSemanticCarVerificationStage';
import AddonSemanticIdentityVerificationResult from './AddonSemanticIdentityVerificationResult';
import AddonSemanticIdentityVerificationStage from './AddonSemanticIdentityVerificationStage';
import AddonSemanticInspectionResult from './AddonSemanticInspectionResult';
import AddonSemanticNewFaceVerificationResult from './AddonSemanticNewFaceVerificationResult';
import AddonSemanticOwnershipResult from './AddonSemanticOwnershipResult';
import AddonSemanticPostVerificationResult from './AddonSemanticPostVerificationResult';
import AddonsAddonSemanticPaymentMethod from './AddonsAddonSemanticPaymentMethod';
import AddonsAddonSemanticStatus from './AddonsAddonSemanticStatus';

/**
 * The AddonsAddonSemantic model module.
 * @module model/AddonsAddonSemantic
 * @version 0.1.0
 */
class AddonsAddonSemantic {
    /**
     * Constructs a new <code>AddonsAddonSemantic</code>.
     * This is the message extracted by OpenPlatform from service provider semantics. Guidelines:  - Always check to see if an appropriate enum field or value exists before  adding one.  - Zero value of every enum should be {ENUM_NAME}_UNSPECIFIED.  - Enum values should not correspond to any specific post or person  attribute.
     * @alias module:model/AddonsAddonSemantic
     */
    constructor() { 
        
        AddonsAddonSemantic.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AddonsAddonSemantic</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AddonsAddonSemantic} obj Optional instance to populate.
     * @return {module:model/AddonsAddonSemantic} The populated <code>AddonsAddonSemantic</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AddonsAddonSemantic();

            if (data.hasOwnProperty('payment_method')) {
                obj['payment_method'] = AddonsAddonSemanticPaymentMethod.constructFromObject(data['payment_method']);
            }
            if (data.hasOwnProperty('identity_verification_result')) {
                obj['identity_verification_result'] = AddonSemanticIdentityVerificationResult.constructFromObject(data['identity_verification_result']);
            }
            if (data.hasOwnProperty('post_verification_result')) {
                obj['post_verification_result'] = AddonSemanticPostVerificationResult.constructFromObject(data['post_verification_result']);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = AddonsAddonSemanticStatus.constructFromObject(data['status']);
            }
            if (data.hasOwnProperty('identity_verification_last_successful_stage')) {
                obj['identity_verification_last_successful_stage'] = AddonSemanticIdentityVerificationStage.constructFromObject(data['identity_verification_last_successful_stage']);
            }
            if (data.hasOwnProperty('identity_verification_failure_reason')) {
                obj['identity_verification_failure_reason'] = AddonSemanticIdentityVerificationStage.constructFromObject(data['identity_verification_failure_reason']);
            }
            if (data.hasOwnProperty('car_verification_last_successful_stage')) {
                obj['car_verification_last_successful_stage'] = AddonSemanticCarVerificationStage.constructFromObject(data['car_verification_last_successful_stage']);
            }
            if (data.hasOwnProperty('car_verification_failure_reason')) {
                obj['car_verification_failure_reason'] = AddonSemanticCarVerificationStage.constructFromObject(data['car_verification_failure_reason']);
            }
            if (data.hasOwnProperty('ownership_result')) {
                obj['ownership_result'] = AddonSemanticOwnershipResult.constructFromObject(data['ownership_result']);
            }
            if (data.hasOwnProperty('inspection_result')) {
                obj['inspection_result'] = AddonSemanticInspectionResult.constructFromObject(data['inspection_result']);
            }
            if (data.hasOwnProperty('new_face_verification_result')) {
                obj['new_face_verification_result'] = AddonSemanticNewFaceVerificationResult.constructFromObject(data['new_face_verification_result']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AddonsAddonSemantic</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AddonsAddonSemantic</code>.
     */
    static validateJSON(data) {

        return true;
    }

/**
     * @return {module:model/AddonsAddonSemanticPaymentMethod}
     */
    getPaymentMethod() {
        return this.payment_method;
    }

    /**
     * @param {module:model/AddonsAddonSemanticPaymentMethod} paymentMethod
     */
    setPaymentMethod(paymentMethod) {
        this['payment_method'] = paymentMethod;
    }
/**
     * @return {module:model/AddonSemanticIdentityVerificationResult}
     */
    getIdentityVerificationResult() {
        return this.identity_verification_result;
    }

    /**
     * @param {module:model/AddonSemanticIdentityVerificationResult} identityVerificationResult
     */
    setIdentityVerificationResult(identityVerificationResult) {
        this['identity_verification_result'] = identityVerificationResult;
    }
/**
     * @return {module:model/AddonSemanticPostVerificationResult}
     */
    getPostVerificationResult() {
        return this.post_verification_result;
    }

    /**
     * @param {module:model/AddonSemanticPostVerificationResult} postVerificationResult
     */
    setPostVerificationResult(postVerificationResult) {
        this['post_verification_result'] = postVerificationResult;
    }
/**
     * @return {module:model/AddonsAddonSemanticStatus}
     */
    getStatus() {
        return this.status;
    }

    /**
     * @param {module:model/AddonsAddonSemanticStatus} status
     */
    setStatus(status) {
        this['status'] = status;
    }
/**
     * @return {module:model/AddonSemanticIdentityVerificationStage}
     */
    getIdentityVerificationLastSuccessfulStage() {
        return this.identity_verification_last_successful_stage;
    }

    /**
     * @param {module:model/AddonSemanticIdentityVerificationStage} identityVerificationLastSuccessfulStage
     */
    setIdentityVerificationLastSuccessfulStage(identityVerificationLastSuccessfulStage) {
        this['identity_verification_last_successful_stage'] = identityVerificationLastSuccessfulStage;
    }
/**
     * @return {module:model/AddonSemanticIdentityVerificationStage}
     */
    getIdentityVerificationFailureReason() {
        return this.identity_verification_failure_reason;
    }

    /**
     * @param {module:model/AddonSemanticIdentityVerificationStage} identityVerificationFailureReason
     */
    setIdentityVerificationFailureReason(identityVerificationFailureReason) {
        this['identity_verification_failure_reason'] = identityVerificationFailureReason;
    }
/**
     * @return {module:model/AddonSemanticCarVerificationStage}
     */
    getCarVerificationLastSuccessfulStage() {
        return this.car_verification_last_successful_stage;
    }

    /**
     * @param {module:model/AddonSemanticCarVerificationStage} carVerificationLastSuccessfulStage
     */
    setCarVerificationLastSuccessfulStage(carVerificationLastSuccessfulStage) {
        this['car_verification_last_successful_stage'] = carVerificationLastSuccessfulStage;
    }
/**
     * @return {module:model/AddonSemanticCarVerificationStage}
     */
    getCarVerificationFailureReason() {
        return this.car_verification_failure_reason;
    }

    /**
     * @param {module:model/AddonSemanticCarVerificationStage} carVerificationFailureReason
     */
    setCarVerificationFailureReason(carVerificationFailureReason) {
        this['car_verification_failure_reason'] = carVerificationFailureReason;
    }
/**
     * @return {module:model/AddonSemanticOwnershipResult}
     */
    getOwnershipResult() {
        return this.ownership_result;
    }

    /**
     * @param {module:model/AddonSemanticOwnershipResult} ownershipResult
     */
    setOwnershipResult(ownershipResult) {
        this['ownership_result'] = ownershipResult;
    }
/**
     * @return {module:model/AddonSemanticInspectionResult}
     */
    getInspectionResult() {
        return this.inspection_result;
    }

    /**
     * @param {module:model/AddonSemanticInspectionResult} inspectionResult
     */
    setInspectionResult(inspectionResult) {
        this['inspection_result'] = inspectionResult;
    }
/**
     * @return {module:model/AddonSemanticNewFaceVerificationResult}
     */
    getNewFaceVerificationResult() {
        return this.new_face_verification_result;
    }

    /**
     * @param {module:model/AddonSemanticNewFaceVerificationResult} newFaceVerificationResult
     */
    setNewFaceVerificationResult(newFaceVerificationResult) {
        this['new_face_verification_result'] = newFaceVerificationResult;
    }

}



/**
 * @member {module:model/AddonsAddonSemanticPaymentMethod} payment_method
 */
AddonsAddonSemantic.prototype['payment_method'] = undefined;

/**
 * @member {module:model/AddonSemanticIdentityVerificationResult} identity_verification_result
 */
AddonsAddonSemantic.prototype['identity_verification_result'] = undefined;

/**
 * @member {module:model/AddonSemanticPostVerificationResult} post_verification_result
 */
AddonsAddonSemantic.prototype['post_verification_result'] = undefined;

/**
 * @member {module:model/AddonsAddonSemanticStatus} status
 */
AddonsAddonSemantic.prototype['status'] = undefined;

/**
 * @member {module:model/AddonSemanticIdentityVerificationStage} identity_verification_last_successful_stage
 */
AddonsAddonSemantic.prototype['identity_verification_last_successful_stage'] = undefined;

/**
 * @member {module:model/AddonSemanticIdentityVerificationStage} identity_verification_failure_reason
 */
AddonsAddonSemantic.prototype['identity_verification_failure_reason'] = undefined;

/**
 * @member {module:model/AddonSemanticCarVerificationStage} car_verification_last_successful_stage
 */
AddonsAddonSemantic.prototype['car_verification_last_successful_stage'] = undefined;

/**
 * @member {module:model/AddonSemanticCarVerificationStage} car_verification_failure_reason
 */
AddonsAddonSemantic.prototype['car_verification_failure_reason'] = undefined;

/**
 * @member {module:model/AddonSemanticOwnershipResult} ownership_result
 */
AddonsAddonSemantic.prototype['ownership_result'] = undefined;

/**
 * @member {module:model/AddonSemanticInspectionResult} inspection_result
 */
AddonsAddonSemantic.prototype['inspection_result'] = undefined;

/**
 * @member {module:model/AddonSemanticNewFaceVerificationResult} new_face_verification_result
 */
AddonsAddonSemantic.prototype['new_face_verification_result'] = undefined;






export default AddonsAddonSemantic;

