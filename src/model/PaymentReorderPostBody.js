/**
 * Kenar API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PaymentReorderPostBody model module.
 * @module model/PaymentReorderPostBody
 * @version 0.1.0
 */
class PaymentReorderPostBody {
    /**
     * Constructs a new <code>PaymentReorderPostBody</code>.
     * @alias module:model/PaymentReorderPostBody
     */
    constructor() { 
        
        PaymentReorderPostBody.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PaymentReorderPostBody</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PaymentReorderPostBody} obj Optional instance to populate.
     * @return {module:model/PaymentReorderPostBody} The populated <code>PaymentReorderPostBody</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PaymentReorderPostBody();

            if (data.hasOwnProperty('extra_details')) {
                obj['extra_details'] = ApiClient.convertToType(data['extra_details'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PaymentReorderPostBody</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PaymentReorderPostBody</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['extra_details'] && !(typeof data['extra_details'] === 'string' || data['extra_details'] instanceof String)) {
            throw new Error("Expected the field `extra_details` to be a primitive type in the JSON string but got " + data['extra_details']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }

        return true;
    }

/**
     * Returns جزئیات اضافی که می‌خواهید به سمت کنار ارسال کنید. این فیلد اختیاری است و می‌تواند برای حل ناسازگاری‌ها در تراکنش استفاده شود.
     * @return {String}
     */
    getExtraDetails() {
        return this.extra_details;
    }

    /**
     * Sets جزئیات اضافی که می‌خواهید به سمت کنار ارسال کنید. این فیلد اختیاری است و می‌تواند برای حل ناسازگاری‌ها در تراکنش استفاده شود.
     * @param {String} extraDetails جزئیات اضافی که می‌خواهید به سمت کنار ارسال کنید. این فیلد اختیاری است و می‌تواند برای حل ناسازگاری‌ها در تراکنش استفاده شود.
     */
    setExtraDetails(extraDetails) {
        this['extra_details'] = extraDetails;
    }
/**
     * Returns یک uuid نسخه 4 که باید برای هر پرداخت منحصر به فرد باشد. این uuid باید در سمت شما تولید شده و در درخواست ارسال شود. اگر id ای ارسال شود که تراکنش موفق یا نیمه موفقی در سمت کنار داشته باشد، خطا دریافت خواهید کرد.
     * @return {String}
     */
    getId() {
        return this.id;
    }

    /**
     * Sets یک uuid نسخه 4 که باید برای هر پرداخت منحصر به فرد باشد. این uuid باید در سمت شما تولید شده و در درخواست ارسال شود. اگر id ای ارسال شود که تراکنش موفق یا نیمه موفقی در سمت کنار داشته باشد، خطا دریافت خواهید کرد.
     * @param {String} id یک uuid نسخه 4 که باید برای هر پرداخت منحصر به فرد باشد. این uuid باید در سمت شما تولید شده و در درخواست ارسال شود. اگر id ای ارسال شود که تراکنش موفق یا نیمه موفقی در سمت کنار داشته باشد، خطا دریافت خواهید کرد.
     */
    setId(id) {
        this['id'] = id;
    }

}



/**
 * جزئیات اضافی که می‌خواهید به سمت کنار ارسال کنید. این فیلد اختیاری است و می‌تواند برای حل ناسازگاری‌ها در تراکنش استفاده شود.
 * @member {String} extra_details
 */
PaymentReorderPostBody.prototype['extra_details'] = undefined;

/**
 * یک uuid نسخه 4 که باید برای هر پرداخت منحصر به فرد باشد. این uuid باید در سمت شما تولید شده و در درخواست ارسال شود. اگر id ای ارسال شود که تراکنش موفق یا نیمه موفقی در سمت کنار داشته باشد، خطا دریافت خواهید کرد.
 * @member {String} id
 */
PaymentReorderPostBody.prototype['id'] = undefined;






export default PaymentReorderPostBody;

