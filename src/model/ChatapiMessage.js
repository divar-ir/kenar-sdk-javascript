/**
 * Kenar API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ChatapiConversation from './ChatapiConversation';
import ChatapiMessageType from './ChatapiMessageType';
import MessageFileData from './MessageFileData';
import MessageImageData from './MessageImageData';
import MessageLocationData from './MessageLocationData';
import MessageSender from './MessageSender';
import MessageVideoData from './MessageVideoData';
import MessageVoiceData from './MessageVoiceData';

/**
 * The ChatapiMessage model module.
 * @module model/ChatapiMessage
 * @version 0.1.0
 */
class ChatapiMessage {
    /**
     * Constructs a new <code>ChatapiMessage</code>.
     * @alias module:model/ChatapiMessage
     */
    constructor() { 
        
        ChatapiMessage.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ChatapiMessage</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ChatapiMessage} obj Optional instance to populate.
     * @return {module:model/ChatapiMessage} The populated <code>ChatapiMessage</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ChatapiMessage();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('conversation')) {
                obj['conversation'] = ChatapiConversation.constructFromObject(data['conversation']);
            }
            if (data.hasOwnProperty('sender')) {
                obj['sender'] = MessageSender.constructFromObject(data['sender']);
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ChatapiMessageType.constructFromObject(data['type']);
            }
            if (data.hasOwnProperty('sent_at')) {
                obj['sent_at'] = ApiClient.convertToType(data['sent_at'], 'Date');
            }
            if (data.hasOwnProperty('text')) {
                obj['text'] = ApiClient.convertToType(data['text'], 'String');
            }
            if (data.hasOwnProperty('image_data')) {
                obj['image_data'] = MessageImageData.constructFromObject(data['image_data']);
            }
            if (data.hasOwnProperty('file_data')) {
                obj['file_data'] = MessageFileData.constructFromObject(data['file_data']);
            }
            if (data.hasOwnProperty('voice_data')) {
                obj['voice_data'] = MessageVoiceData.constructFromObject(data['voice_data']);
            }
            if (data.hasOwnProperty('location_data')) {
                obj['location_data'] = MessageLocationData.constructFromObject(data['location_data']);
            }
            if (data.hasOwnProperty('video_data')) {
                obj['video_data'] = MessageVideoData.constructFromObject(data['video_data']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ChatapiMessage</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ChatapiMessage</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // validate the optional field `conversation`
        if (data['conversation']) { // data not null
          ChatapiConversation.validateJSON(data['conversation']);
        }
        // validate the optional field `sender`
        if (data['sender']) { // data not null
          MessageSender.validateJSON(data['sender']);
        }
        // ensure the json data is a string
        if (data['text'] && !(typeof data['text'] === 'string' || data['text'] instanceof String)) {
            throw new Error("Expected the field `text` to be a primitive type in the JSON string but got " + data['text']);
        }
        // validate the optional field `image_data`
        if (data['image_data']) { // data not null
          MessageImageData.validateJSON(data['image_data']);
        }
        // validate the optional field `file_data`
        if (data['file_data']) { // data not null
          MessageFileData.validateJSON(data['file_data']);
        }
        // validate the optional field `voice_data`
        if (data['voice_data']) { // data not null
          MessageVoiceData.validateJSON(data['voice_data']);
        }
        // validate the optional field `location_data`
        if (data['location_data']) { // data not null
          MessageLocationData.validateJSON(data['location_data']);
        }
        // validate the optional field `video_data`
        if (data['video_data']) { // data not null
          MessageVideoData.validateJSON(data['video_data']);
        }

        return true;
    }

/**
     * @return {String}
     */
    getId() {
        return this.id;
    }

    /**
     * @param {String} id
     */
    setId(id) {
        this['id'] = id;
    }
/**
     * @return {module:model/ChatapiConversation}
     */
    getConversation() {
        return this.conversation;
    }

    /**
     * @param {module:model/ChatapiConversation} conversation
     */
    setConversation(conversation) {
        this['conversation'] = conversation;
    }
/**
     * @return {module:model/MessageSender}
     */
    getSender() {
        return this.sender;
    }

    /**
     * @param {module:model/MessageSender} sender
     */
    setSender(sender) {
        this['sender'] = sender;
    }
/**
     * @return {module:model/ChatapiMessageType}
     */
    getType() {
        return this.type;
    }

    /**
     * @param {module:model/ChatapiMessageType} type
     */
    setType(type) {
        this['type'] = type;
    }
/**
     * @return {Date}
     */
    getSentAt() {
        return this.sent_at;
    }

    /**
     * @param {Date} sentAt
     */
    setSentAt(sentAt) {
        this['sent_at'] = sentAt;
    }
/**
     * @return {String}
     */
    getText() {
        return this.text;
    }

    /**
     * @param {String} text
     */
    setText(text) {
        this['text'] = text;
    }
/**
     * @return {module:model/MessageImageData}
     */
    getImageData() {
        return this.image_data;
    }

    /**
     * @param {module:model/MessageImageData} imageData
     */
    setImageData(imageData) {
        this['image_data'] = imageData;
    }
/**
     * @return {module:model/MessageFileData}
     */
    getFileData() {
        return this.file_data;
    }

    /**
     * @param {module:model/MessageFileData} fileData
     */
    setFileData(fileData) {
        this['file_data'] = fileData;
    }
/**
     * @return {module:model/MessageVoiceData}
     */
    getVoiceData() {
        return this.voice_data;
    }

    /**
     * @param {module:model/MessageVoiceData} voiceData
     */
    setVoiceData(voiceData) {
        this['voice_data'] = voiceData;
    }
/**
     * @return {module:model/MessageLocationData}
     */
    getLocationData() {
        return this.location_data;
    }

    /**
     * @param {module:model/MessageLocationData} locationData
     */
    setLocationData(locationData) {
        this['location_data'] = locationData;
    }
/**
     * @return {module:model/MessageVideoData}
     */
    getVideoData() {
        return this.video_data;
    }

    /**
     * @param {module:model/MessageVideoData} videoData
     */
    setVideoData(videoData) {
        this['video_data'] = videoData;
    }

}



/**
 * @member {String} id
 */
ChatapiMessage.prototype['id'] = undefined;

/**
 * @member {module:model/ChatapiConversation} conversation
 */
ChatapiMessage.prototype['conversation'] = undefined;

/**
 * @member {module:model/MessageSender} sender
 */
ChatapiMessage.prototype['sender'] = undefined;

/**
 * @member {module:model/ChatapiMessageType} type
 */
ChatapiMessage.prototype['type'] = undefined;

/**
 * @member {Date} sent_at
 */
ChatapiMessage.prototype['sent_at'] = undefined;

/**
 * @member {String} text
 */
ChatapiMessage.prototype['text'] = undefined;

/**
 * @member {module:model/MessageImageData} image_data
 */
ChatapiMessage.prototype['image_data'] = undefined;

/**
 * @member {module:model/MessageFileData} file_data
 */
ChatapiMessage.prototype['file_data'] = undefined;

/**
 * @member {module:model/MessageVoiceData} voice_data
 */
ChatapiMessage.prototype['voice_data'] = undefined;

/**
 * @member {module:model/MessageLocationData} location_data
 */
ChatapiMessage.prototype['location_data'] = undefined;

/**
 * @member {module:model/MessageVideoData} video_data
 */
ChatapiMessage.prototype['video_data'] = undefined;






export default ChatapiMessage;

