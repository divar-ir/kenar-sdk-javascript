/**
 * divar_interface/open_platform/chatapi/chatapi.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AddonsWidget from './AddonsWidget';

/**
 * The AddonsCreateUserAddonV2Body model module.
 * @module model/AddonsCreateUserAddonV2Body
 * @version 0.1.0
 */
class AddonsCreateUserAddonV2Body {
    /**
     * Constructs a new <code>AddonsCreateUserAddonV2Body</code>.
     * @alias module:model/AddonsCreateUserAddonV2Body
     */
    constructor() { 
        
        AddonsCreateUserAddonV2Body.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AddonsCreateUserAddonV2Body</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AddonsCreateUserAddonV2Body} obj Optional instance to populate.
     * @return {module:model/AddonsCreateUserAddonV2Body} The populated <code>AddonsCreateUserAddonV2Body</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AddonsCreateUserAddonV2Body();

            if (data.hasOwnProperty('widgets')) {
                obj['widgets'] = ApiClient.convertToType(data['widgets'], [AddonsWidget]);
            }
            if (data.hasOwnProperty('semantic')) {
                obj['semantic'] = ApiClient.convertToType(data['semantic'], {'String': 'String'});
            }
            if (data.hasOwnProperty('phone')) {
                obj['phone'] = ApiClient.convertToType(data['phone'], 'String');
            }
            if (data.hasOwnProperty('categories')) {
                obj['categories'] = ApiClient.convertToType(data['categories'], ['String']);
            }
            if (data.hasOwnProperty('ticket_uuid')) {
                obj['ticket_uuid'] = ApiClient.convertToType(data['ticket_uuid'], 'String');
            }
            if (data.hasOwnProperty('cost')) {
                obj['cost'] = ApiClient.convertToType(data['cost'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AddonsCreateUserAddonV2Body</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AddonsCreateUserAddonV2Body</code>.
     */
    static validateJSON(data) {
        if (data['widgets']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['widgets'])) {
                throw new Error("Expected the field `widgets` to be an array in the JSON data but got " + data['widgets']);
            }
            // validate the optional field `widgets` (array)
            for (const item of data['widgets']) {
                AddonsWidget.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['phone'] && !(typeof data['phone'] === 'string' || data['phone'] instanceof String)) {
            throw new Error("Expected the field `phone` to be a primitive type in the JSON string but got " + data['phone']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['categories'])) {
            throw new Error("Expected the field `categories` to be an array in the JSON data but got " + data['categories']);
        }
        // ensure the json data is a string
        if (data['ticket_uuid'] && !(typeof data['ticket_uuid'] === 'string' || data['ticket_uuid'] instanceof String)) {
            throw new Error("Expected the field `ticket_uuid` to be a primitive type in the JSON string but got " + data['ticket_uuid']);
        }

        return true;
    }

/**
     * @return {Array.<module:model/AddonsWidget>}
     */
    getWidgets() {
        return this.widgets;
    }

    /**
     * @param {Array.<module:model/AddonsWidget>} widgets
     */
    setWidgets(widgets) {
        this['widgets'] = widgets;
    }
/**
     * @return {Object.<String, String>}
     */
    getSemantic() {
        return this.semantic;
    }

    /**
     * @param {Object.<String, String>} semantic
     */
    setSemantic(semantic) {
        this['semantic'] = semantic;
    }
/**
     * @return {String}
     */
    getPhone() {
        return this.phone;
    }

    /**
     * @param {String} phone
     */
    setPhone(phone) {
        this['phone'] = phone;
    }
/**
     * @return {Array.<String>}
     */
    getCategories() {
        return this.categories;
    }

    /**
     * @param {Array.<String>} categories
     */
    setCategories(categories) {
        this['categories'] = categories;
    }
/**
     * @return {String}
     */
    getTicketUuid() {
        return this.ticket_uuid;
    }

    /**
     * @param {String} ticketUuid
     */
    setTicketUuid(ticketUuid) {
        this['ticket_uuid'] = ticketUuid;
    }
/**
     * @return {Number}
     */
    getCost() {
        return this.cost;
    }

    /**
     * @param {Number} cost
     */
    setCost(cost) {
        this['cost'] = cost;
    }

}



/**
 * @member {Array.<module:model/AddonsWidget>} widgets
 */
AddonsCreateUserAddonV2Body.prototype['widgets'] = undefined;

/**
 * @member {Object.<String, String>} semantic
 */
AddonsCreateUserAddonV2Body.prototype['semantic'] = undefined;

/**
 * @member {String} phone
 */
AddonsCreateUserAddonV2Body.prototype['phone'] = undefined;

/**
 * @member {Array.<String>} categories
 */
AddonsCreateUserAddonV2Body.prototype['categories'] = undefined;

/**
 * @member {String} ticket_uuid
 */
AddonsCreateUserAddonV2Body.prototype['ticket_uuid'] = undefined;

/**
 * @member {Number} cost
 */
AddonsCreateUserAddonV2Body.prototype['cost'] = undefined;






export default AddonsCreateUserAddonV2Body;

