/**
 * Kenar API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ChatapiConversation from './ChatapiConversation';
import ChatapiMessage from './ChatapiMessage';

/**
 * The ChatapiGetConversationResponse model module.
 * @module model/ChatapiGetConversationResponse
 * @version 0.1.0
 */
class ChatapiGetConversationResponse {
    /**
     * Constructs a new <code>ChatapiGetConversationResponse</code>.
     * @alias module:model/ChatapiGetConversationResponse
     * @param conversation {module:model/ChatapiConversation} 
     * @param messages {Array.<module:model/ChatapiMessage>} List of messages in the conversation
     */
    constructor(conversation, messages) { 
        
        ChatapiGetConversationResponse.initialize(this, conversation, messages);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, conversation, messages) { 
        obj['conversation'] = conversation;
        obj['messages'] = messages;
    }

    /**
     * Constructs a <code>ChatapiGetConversationResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ChatapiGetConversationResponse} obj Optional instance to populate.
     * @return {module:model/ChatapiGetConversationResponse} The populated <code>ChatapiGetConversationResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ChatapiGetConversationResponse();

            if (data.hasOwnProperty('conversation')) {
                obj['conversation'] = ChatapiConversation.constructFromObject(data['conversation']);
            }
            if (data.hasOwnProperty('messages')) {
                obj['messages'] = ApiClient.convertToType(data['messages'], [ChatapiMessage]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ChatapiGetConversationResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ChatapiGetConversationResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ChatapiGetConversationResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `conversation`
        if (data['conversation']) { // data not null
          ChatapiConversation.validateJSON(data['conversation']);
        }
        if (data['messages']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['messages'])) {
                throw new Error("Expected the field `messages` to be an array in the JSON data but got " + data['messages']);
            }
            // validate the optional field `messages` (array)
            for (const item of data['messages']) {
                ChatapiMessage.validateJSON(item);
            };
        }

        return true;
    }

/**
     * @return {module:model/ChatapiConversation}
     */
    getConversation() {
        return this.conversation;
    }

    /**
     * @param {module:model/ChatapiConversation} conversation
     */
    setConversation(conversation) {
        this['conversation'] = conversation;
    }
/**
     * Returns List of messages in the conversation
     * @return {Array.<module:model/ChatapiMessage>}
     */
    getMessages() {
        return this.messages;
    }

    /**
     * Sets List of messages in the conversation
     * @param {Array.<module:model/ChatapiMessage>} messages List of messages in the conversation
     */
    setMessages(messages) {
        this['messages'] = messages;
    }

}

ChatapiGetConversationResponse.RequiredProperties = ["conversation", "messages"];

/**
 * @member {module:model/ChatapiConversation} conversation
 */
ChatapiGetConversationResponse.prototype['conversation'] = undefined;

/**
 * List of messages in the conversation
 * @member {Array.<module:model/ChatapiMessage>} messages
 */
ChatapiGetConversationResponse.prototype['messages'] = undefined;






export default ChatapiGetConversationResponse;

