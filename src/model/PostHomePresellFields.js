/**
 * Kenar API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import HomePresellFieldsConstructionPhase from './HomePresellFieldsConstructionPhase';
import HomePresellFieldsDeliveryMonth from './HomePresellFieldsDeliveryMonth';
import HomePresellFieldsDeliveryYear from './HomePresellFieldsDeliveryYear';
import HomePresellFieldsUnitType from './HomePresellFieldsUnitType';

/**
 * The PostHomePresellFields model module.
 * @module model/PostHomePresellFields
 * @version 0.1.0
 */
class PostHomePresellFields {
    /**
     * Constructs a new <code>PostHomePresellFields</code>.
     * @alias module:model/PostHomePresellFields
     * @param hasOwnImage {Boolean} تصاویر مربوط به خود ملک بوده و تزئینی نیستند.
     */
    constructor(hasOwnImage) { 
        
        PostHomePresellFields.initialize(this, hasOwnImage);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, hasOwnImage) { 
        obj['has_own_image'] = hasOwnImage;
    }

    /**
     * Constructs a <code>PostHomePresellFields</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PostHomePresellFields} obj Optional instance to populate.
     * @return {module:model/PostHomePresellFields} The populated <code>PostHomePresellFields</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PostHomePresellFields();

            if (data.hasOwnProperty('has_own_image')) {
                obj['has_own_image'] = ApiClient.convertToType(data['has_own_image'], 'Boolean');
            }
            if (data.hasOwnProperty('base_price_per_square_meter')) {
                obj['base_price_per_square_meter'] = ApiClient.convertToType(data['base_price_per_square_meter'], 'String');
            }
            if (data.hasOwnProperty('construction_phase')) {
                obj['construction_phase'] = HomePresellFieldsConstructionPhase.constructFromObject(data['construction_phase']);
            }
            if (data.hasOwnProperty('delivery_month')) {
                obj['delivery_month'] = HomePresellFieldsDeliveryMonth.constructFromObject(data['delivery_month']);
            }
            if (data.hasOwnProperty('delivery_payment_percentage')) {
                obj['delivery_payment_percentage'] = ApiClient.convertToType(data['delivery_payment_percentage'], 'Number');
            }
            if (data.hasOwnProperty('delivery_year')) {
                obj['delivery_year'] = HomePresellFieldsDeliveryYear.constructFromObject(data['delivery_year']);
            }
            if (data.hasOwnProperty('developer_company_name')) {
                obj['developer_company_name'] = ApiClient.convertToType(data['developer_company_name'], 'String');
            }
            if (data.hasOwnProperty('down_payment_percentage')) {
                obj['down_payment_percentage'] = ApiClient.convertToType(data['down_payment_percentage'], 'Number');
            }
            if (data.hasOwnProperty('min_unit_size')) {
                obj['min_unit_size'] = ApiClient.convertToType(data['min_unit_size'], 'Number');
            }
            if (data.hasOwnProperty('project_name')) {
                obj['project_name'] = ApiClient.convertToType(data['project_name'], 'String');
            }
            if (data.hasOwnProperty('project_physical_progress_percentage')) {
                obj['project_physical_progress_percentage'] = ApiClient.convertToType(data['project_physical_progress_percentage'], 'Number');
            }
            if (data.hasOwnProperty('unit_types_offered')) {
                obj['unit_types_offered'] = ApiClient.convertToType(data['unit_types_offered'], [HomePresellFieldsUnitType]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PostHomePresellFields</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PostHomePresellFields</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PostHomePresellFields.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['base_price_per_square_meter'] && !(typeof data['base_price_per_square_meter'] === 'string' || data['base_price_per_square_meter'] instanceof String)) {
            throw new Error("Expected the field `base_price_per_square_meter` to be a primitive type in the JSON string but got " + data['base_price_per_square_meter']);
        }
        // ensure the json data is a string
        if (data['developer_company_name'] && !(typeof data['developer_company_name'] === 'string' || data['developer_company_name'] instanceof String)) {
            throw new Error("Expected the field `developer_company_name` to be a primitive type in the JSON string but got " + data['developer_company_name']);
        }
        // ensure the json data is a string
        if (data['project_name'] && !(typeof data['project_name'] === 'string' || data['project_name'] instanceof String)) {
            throw new Error("Expected the field `project_name` to be a primitive type in the JSON string but got " + data['project_name']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['unit_types_offered'])) {
            throw new Error("Expected the field `unit_types_offered` to be an array in the JSON data but got " + data['unit_types_offered']);
        }

        return true;
    }

/**
     * Returns تصاویر مربوط به خود ملک بوده و تزئینی نیستند.
     * @return {Boolean}
     */
    getHasOwnImage() {
        return this.has_own_image;
    }

    /**
     * Sets تصاویر مربوط به خود ملک بوده و تزئینی نیستند.
     * @param {Boolean} hasOwnImage تصاویر مربوط به خود ملک بوده و تزئینی نیستند.
     */
    setHasOwnImage(hasOwnImage) {
        this['has_own_image'] = hasOwnImage;
    }
/**
     * Returns Base price per square meter in Toman
     * @return {String}
     */
    getBasePricePerSquareMeter() {
        return this.base_price_per_square_meter;
    }

    /**
     * Sets Base price per square meter in Toman
     * @param {String} basePricePerSquareMeter Base price per square meter in Toman
     */
    setBasePricePerSquareMeter(basePricePerSquareMeter) {
        this['base_price_per_square_meter'] = basePricePerSquareMeter;
    }
/**
     * @return {module:model/HomePresellFieldsConstructionPhase}
     */
    getConstructionPhase() {
        return this.construction_phase;
    }

    /**
     * @param {module:model/HomePresellFieldsConstructionPhase} constructionPhase
     */
    setConstructionPhase(constructionPhase) {
        this['construction_phase'] = constructionPhase;
    }
/**
     * @return {module:model/HomePresellFieldsDeliveryMonth}
     */
    getDeliveryMonth() {
        return this.delivery_month;
    }

    /**
     * @param {module:model/HomePresellFieldsDeliveryMonth} deliveryMonth
     */
    setDeliveryMonth(deliveryMonth) {
        this['delivery_month'] = deliveryMonth;
    }
/**
     * Returns Payment percentage required upon delivery
     * @return {Number}
     */
    getDeliveryPaymentPercentage() {
        return this.delivery_payment_percentage;
    }

    /**
     * Sets Payment percentage required upon delivery
     * @param {Number} deliveryPaymentPercentage Payment percentage required upon delivery
     */
    setDeliveryPaymentPercentage(deliveryPaymentPercentage) {
        this['delivery_payment_percentage'] = deliveryPaymentPercentage;
    }
/**
     * @return {module:model/HomePresellFieldsDeliveryYear}
     */
    getDeliveryYear() {
        return this.delivery_year;
    }

    /**
     * @param {module:model/HomePresellFieldsDeliveryYear} deliveryYear
     */
    setDeliveryYear(deliveryYear) {
        this['delivery_year'] = deliveryYear;
    }
/**
     * Returns Name of the developer company
     * @return {String}
     */
    getDeveloperCompanyName() {
        return this.developer_company_name;
    }

    /**
     * Sets Name of the developer company
     * @param {String} developerCompanyName Name of the developer company
     */
    setDeveloperCompanyName(developerCompanyName) {
        this['developer_company_name'] = developerCompanyName;
    }
/**
     * Returns Down payment percentage required
     * @return {Number}
     */
    getDownPaymentPercentage() {
        return this.down_payment_percentage;
    }

    /**
     * Sets Down payment percentage required
     * @param {Number} downPaymentPercentage Down payment percentage required
     */
    setDownPaymentPercentage(downPaymentPercentage) {
        this['down_payment_percentage'] = downPaymentPercentage;
    }
/**
     * Returns Minimum unit size in square meters
     * @return {Number}
     */
    getMinUnitSize() {
        return this.min_unit_size;
    }

    /**
     * Sets Minimum unit size in square meters
     * @param {Number} minUnitSize Minimum unit size in square meters
     */
    setMinUnitSize(minUnitSize) {
        this['min_unit_size'] = minUnitSize;
    }
/**
     * Returns Name of the home presell project
     * @return {String}
     */
    getProjectName() {
        return this.project_name;
    }

    /**
     * Sets Name of the home presell project
     * @param {String} projectName Name of the home presell project
     */
    setProjectName(projectName) {
        this['project_name'] = projectName;
    }
/**
     * Returns Physical progress percentage of the project
     * @return {Number}
     */
    getProjectPhysicalProgressPercentage() {
        return this.project_physical_progress_percentage;
    }

    /**
     * Sets Physical progress percentage of the project
     * @param {Number} projectPhysicalProgressPercentage Physical progress percentage of the project
     */
    setProjectPhysicalProgressPercentage(projectPhysicalProgressPercentage) {
        this['project_physical_progress_percentage'] = projectPhysicalProgressPercentage;
    }
/**
     * Returns List of unit types offered in the project
     * @return {Array.<module:model/HomePresellFieldsUnitType>}
     */
    getUnitTypesOffered() {
        return this.unit_types_offered;
    }

    /**
     * Sets List of unit types offered in the project
     * @param {Array.<module:model/HomePresellFieldsUnitType>} unitTypesOffered List of unit types offered in the project
     */
    setUnitTypesOffered(unitTypesOffered) {
        this['unit_types_offered'] = unitTypesOffered;
    }

}

PostHomePresellFields.RequiredProperties = ["has_own_image"];

/**
 * تصاویر مربوط به خود ملک بوده و تزئینی نیستند.
 * @member {Boolean} has_own_image
 */
PostHomePresellFields.prototype['has_own_image'] = undefined;

/**
 * Base price per square meter in Toman
 * @member {String} base_price_per_square_meter
 */
PostHomePresellFields.prototype['base_price_per_square_meter'] = undefined;

/**
 * @member {module:model/HomePresellFieldsConstructionPhase} construction_phase
 */
PostHomePresellFields.prototype['construction_phase'] = undefined;

/**
 * @member {module:model/HomePresellFieldsDeliveryMonth} delivery_month
 */
PostHomePresellFields.prototype['delivery_month'] = undefined;

/**
 * Payment percentage required upon delivery
 * @member {Number} delivery_payment_percentage
 */
PostHomePresellFields.prototype['delivery_payment_percentage'] = undefined;

/**
 * @member {module:model/HomePresellFieldsDeliveryYear} delivery_year
 */
PostHomePresellFields.prototype['delivery_year'] = undefined;

/**
 * Name of the developer company
 * @member {String} developer_company_name
 */
PostHomePresellFields.prototype['developer_company_name'] = undefined;

/**
 * Down payment percentage required
 * @member {Number} down_payment_percentage
 */
PostHomePresellFields.prototype['down_payment_percentage'] = undefined;

/**
 * Minimum unit size in square meters
 * @member {Number} min_unit_size
 */
PostHomePresellFields.prototype['min_unit_size'] = undefined;

/**
 * Name of the home presell project
 * @member {String} project_name
 */
PostHomePresellFields.prototype['project_name'] = undefined;

/**
 * Physical progress percentage of the project
 * @member {Number} project_physical_progress_percentage
 */
PostHomePresellFields.prototype['project_physical_progress_percentage'] = undefined;

/**
 * List of unit types offered in the project
 * @member {Array.<module:model/HomePresellFieldsUnitType>} unit_types_offered
 */
PostHomePresellFields.prototype['unit_types_offered'] = undefined;






export default PostHomePresellFields;

