/**
 * Kenar API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PostSubmitEmergencyResidencePostRequest model module.
 * @module model/PostSubmitEmergencyResidencePostRequest
 * @version 0.1.0
 */
class PostSubmitEmergencyResidencePostRequest {
    /**
     * Constructs a new <code>PostSubmitEmergencyResidencePostRequest</code>.
     * @alias module:model/PostSubmitEmergencyResidencePostRequest
     */
    constructor() { 
        
        PostSubmitEmergencyResidencePostRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PostSubmitEmergencyResidencePostRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PostSubmitEmergencyResidencePostRequest} obj Optional instance to populate.
     * @return {module:model/PostSubmitEmergencyResidencePostRequest} The populated <code>PostSubmitEmergencyResidencePostRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PostSubmitEmergencyResidencePostRequest();

            if (data.hasOwnProperty('city')) {
                obj['city'] = ApiClient.convertToType(data['city'], 'String');
            }
            if (data.hasOwnProperty('data')) {
                obj['data'] = ApiClient.convertToType(data['data'], Object);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('district')) {
                obj['district'] = ApiClient.convertToType(data['district'], 'String');
            }
            if (data.hasOwnProperty('images')) {
                obj['images'] = ApiClient.convertToType(data['images'], ['String']);
            }
            if (data.hasOwnProperty('phone_number')) {
                obj['phone_number'] = ApiClient.convertToType(data['phone_number'], 'String');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PostSubmitEmergencyResidencePostRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PostSubmitEmergencyResidencePostRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['city'] && !(typeof data['city'] === 'string' || data['city'] instanceof String)) {
            throw new Error("Expected the field `city` to be a primitive type in the JSON string but got " + data['city']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['district'] && !(typeof data['district'] === 'string' || data['district'] instanceof String)) {
            throw new Error("Expected the field `district` to be a primitive type in the JSON string but got " + data['district']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['images'])) {
            throw new Error("Expected the field `images` to be an array in the JSON data but got " + data['images']);
        }
        // ensure the json data is a string
        if (data['phone_number'] && !(typeof data['phone_number'] === 'string' || data['phone_number'] instanceof String)) {
            throw new Error("Expected the field `phone_number` to be a primitive type in the JSON string but got " + data['phone_number']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }

        return true;
    }

/**
     * @return {String}
     */
    getCity() {
        return this.city;
    }

    /**
     * @param {String} city
     */
    setCity(city) {
        this['city'] = city;
    }
/**
     * @return {Object}
     */
    getData() {
        return this.data;
    }

    /**
     * @param {Object} data
     */
    setData(data) {
        this['data'] = data;
    }
/**
     * @return {String}
     */
    getDescription() {
        return this.description;
    }

    /**
     * @param {String} description
     */
    setDescription(description) {
        this['description'] = description;
    }
/**
     * @return {String}
     */
    getDistrict() {
        return this.district;
    }

    /**
     * @param {String} district
     */
    setDistrict(district) {
        this['district'] = district;
    }
/**
     * @return {Array.<String>}
     */
    getImages() {
        return this.images;
    }

    /**
     * @param {Array.<String>} images
     */
    setImages(images) {
        this['images'] = images;
    }
/**
     * @return {String}
     */
    getPhoneNumber() {
        return this.phone_number;
    }

    /**
     * @param {String} phoneNumber
     */
    setPhoneNumber(phoneNumber) {
        this['phone_number'] = phoneNumber;
    }
/**
     * @return {String}
     */
    getTitle() {
        return this.title;
    }

    /**
     * @param {String} title
     */
    setTitle(title) {
        this['title'] = title;
    }

}



/**
 * @member {String} city
 */
PostSubmitEmergencyResidencePostRequest.prototype['city'] = undefined;

/**
 * @member {Object} data
 */
PostSubmitEmergencyResidencePostRequest.prototype['data'] = undefined;

/**
 * @member {String} description
 */
PostSubmitEmergencyResidencePostRequest.prototype['description'] = undefined;

/**
 * @member {String} district
 */
PostSubmitEmergencyResidencePostRequest.prototype['district'] = undefined;

/**
 * @member {Array.<String>} images
 */
PostSubmitEmergencyResidencePostRequest.prototype['images'] = undefined;

/**
 * @member {String} phone_number
 */
PostSubmitEmergencyResidencePostRequest.prototype['phone_number'] = undefined;

/**
 * @member {String} title
 */
PostSubmitEmergencyResidencePostRequest.prototype['title'] = undefined;






export default PostSubmitEmergencyResidencePostRequest;

