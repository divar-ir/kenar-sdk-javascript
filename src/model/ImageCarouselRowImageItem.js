/**
 * divar_interface/open_platform/chatapi/chatapi.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ImageCarouselRowImageItem model module.
 * @module model/ImageCarouselRowImageItem
 * @version 0.1.0
 */
class ImageCarouselRowImageItem {
    /**
     * Constructs a new <code>ImageCarouselRowImageItem</code>.
     * @alias module:model/ImageCarouselRowImageItem
     */
    constructor() { 
        
        ImageCarouselRowImageItem.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ImageCarouselRowImageItem</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ImageCarouselRowImageItem} obj Optional instance to populate.
     * @return {module:model/ImageCarouselRowImageItem} The populated <code>ImageCarouselRowImageItem</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ImageCarouselRowImageItem();

            if (data.hasOwnProperty('image_id')) {
                obj['image_id'] = ApiClient.convertToType(data['image_id'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ImageCarouselRowImageItem</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ImageCarouselRowImageItem</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['image_id'] && !(typeof data['image_id'] === 'string' || data['image_id'] instanceof String)) {
            throw new Error("Expected the field `image_id` to be a primitive type in the JSON string but got " + data['image_id']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }

        return true;
    }

/**
     * @return {String}
     */
    getImageId() {
        return this.image_id;
    }

    /**
     * @param {String} imageId
     */
    setImageId(imageId) {
        this['image_id'] = imageId;
    }
/**
     * @return {String}
     */
    getDescription() {
        return this.description;
    }

    /**
     * @param {String} description
     */
    setDescription(description) {
        this['description'] = description;
    }

}



/**
 * @member {String} image_id
 */
ImageCarouselRowImageItem.prototype['image_id'] = undefined;

/**
 * @member {String} description
 */
ImageCarouselRowImageItem.prototype['description'] = undefined;






export default ImageCarouselRowImageItem;

