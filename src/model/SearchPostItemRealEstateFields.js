/**
 * divar_interface/open_platform/chatapi/chatapi.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SearchPostItemPrice from './SearchPostItemPrice';

/**
 * The SearchPostItemRealEstateFields model module.
 * @module model/SearchPostItemRealEstateFields
 * @version version not set
 */
class SearchPostItemRealEstateFields {
    /**
     * Constructs a new <code>SearchPostItemRealEstateFields</code>.
     * @alias module:model/SearchPostItemRealEstateFields
     */
    constructor() { 
        
        SearchPostItemRealEstateFields.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SearchPostItemRealEstateFields</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SearchPostItemRealEstateFields} obj Optional instance to populate.
     * @return {module:model/SearchPostItemRealEstateFields} The populated <code>SearchPostItemRealEstateFields</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SearchPostItemRealEstateFields();

            if (data.hasOwnProperty('credit')) {
                obj['credit'] = SearchPostItemPrice.constructFromObject(data['credit']);
            }
            if (data.hasOwnProperty('rent')) {
                obj['rent'] = SearchPostItemPrice.constructFromObject(data['rent']);
            }
            if (data.hasOwnProperty('daily_rent')) {
                obj['daily_rent'] = ApiClient.convertToType(data['daily_rent'], 'String');
            }
            if (data.hasOwnProperty('size')) {
                obj['size'] = ApiClient.convertToType(data['size'], 'Number');
            }
            if (data.hasOwnProperty('year')) {
                obj['year'] = ApiClient.convertToType(data['year'], 'Number');
            }
            if (data.hasOwnProperty('has_parking')) {
                obj['has_parking'] = ApiClient.convertToType(data['has_parking'], 'Boolean');
            }
            if (data.hasOwnProperty('has_elevator')) {
                obj['has_elevator'] = ApiClient.convertToType(data['has_elevator'], 'Boolean');
            }
            if (data.hasOwnProperty('rooms')) {
                obj['rooms'] = ApiClient.convertToType(data['rooms'], 'String');
            }
            if (data.hasOwnProperty('floor')) {
                obj['floor'] = ApiClient.convertToType(data['floor'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SearchPostItemRealEstateFields</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SearchPostItemRealEstateFields</code>.
     */
    static validateJSON(data) {
        // validate the optional field `credit`
        if (data['credit']) { // data not null
          SearchPostItemPrice.validateJSON(data['credit']);
        }
        // validate the optional field `rent`
        if (data['rent']) { // data not null
          SearchPostItemPrice.validateJSON(data['rent']);
        }
        // ensure the json data is a string
        if (data['daily_rent'] && !(typeof data['daily_rent'] === 'string' || data['daily_rent'] instanceof String)) {
            throw new Error("Expected the field `daily_rent` to be a primitive type in the JSON string but got " + data['daily_rent']);
        }
        // ensure the json data is a string
        if (data['rooms'] && !(typeof data['rooms'] === 'string' || data['rooms'] instanceof String)) {
            throw new Error("Expected the field `rooms` to be a primitive type in the JSON string but got " + data['rooms']);
        }

        return true;
    }


}



/**
 * @member {module:model/SearchPostItemPrice} credit
 */
SearchPostItemRealEstateFields.prototype['credit'] = undefined;

/**
 * @member {module:model/SearchPostItemPrice} rent
 */
SearchPostItemRealEstateFields.prototype['rent'] = undefined;

/**
 * @member {String} daily_rent
 */
SearchPostItemRealEstateFields.prototype['daily_rent'] = undefined;

/**
 * @member {Number} size
 */
SearchPostItemRealEstateFields.prototype['size'] = undefined;

/**
 * @member {Number} year
 */
SearchPostItemRealEstateFields.prototype['year'] = undefined;

/**
 * @member {Boolean} has_parking
 */
SearchPostItemRealEstateFields.prototype['has_parking'] = undefined;

/**
 * @member {Boolean} has_elevator
 */
SearchPostItemRealEstateFields.prototype['has_elevator'] = undefined;

/**
 * @member {String} rooms
 */
SearchPostItemRealEstateFields.prototype['rooms'] = undefined;

/**
 * @member {Number} floor
 */
SearchPostItemRealEstateFields.prototype['floor'] = undefined;






export default SearchPostItemRealEstateFields;

