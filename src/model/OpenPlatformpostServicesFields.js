/**
 * Kenar API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PostServicesFieldsCategory from './PostServicesFieldsCategory';

/**
 * The OpenPlatformpostServicesFields model module.
 * @module model/OpenPlatformpostServicesFields
 * @version 0.1.0
 */
class OpenPlatformpostServicesFields {
    /**
     * Constructs a new <code>OpenPlatformpostServicesFields</code>.
     * @alias module:model/OpenPlatformpostServicesFields
     * @param category {module:model/PostServicesFieldsCategory} 
     * @param expertiseIds {Array.<String>} List of expertise ids
     * @param workHoursEnd {Number} End hour of work in 24-hour format (e.g. 18 for 18:00). Only applicable if `works_24_7` is false.
     * @param workHoursStart {Number} Start hour of work in 24-hour format (e.g. 9 for 9:00). Only applicable if `works_24_7` is false.
     * @param workOnHolidays {Boolean} Whether the service provider works on holidays
     * @param works247 {Boolean} Whether the service provider is available 24/7. If true, `work_hours_start` and `work_hours_end` are ignored.
     */
    constructor(category, expertiseIds, workHoursEnd, workHoursStart, workOnHolidays, works247) { 
        
        OpenPlatformpostServicesFields.initialize(this, category, expertiseIds, workHoursEnd, workHoursStart, workOnHolidays, works247);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, category, expertiseIds, workHoursEnd, workHoursStart, workOnHolidays, works247) { 
        obj['category'] = category;
        obj['expertise_ids'] = expertiseIds;
        obj['work_hours_end'] = workHoursEnd;
        obj['work_hours_start'] = workHoursStart;
        obj['work_on_holidays'] = workOnHolidays;
        obj['works_24_7'] = works247;
    }

    /**
     * Constructs a <code>OpenPlatformpostServicesFields</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OpenPlatformpostServicesFields} obj Optional instance to populate.
     * @return {module:model/OpenPlatformpostServicesFields} The populated <code>OpenPlatformpostServicesFields</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OpenPlatformpostServicesFields();

            if (data.hasOwnProperty('category')) {
                obj['category'] = PostServicesFieldsCategory.constructFromObject(data['category']);
            }
            if (data.hasOwnProperty('expertise_ids')) {
                obj['expertise_ids'] = ApiClient.convertToType(data['expertise_ids'], ['String']);
            }
            if (data.hasOwnProperty('work_hours_end')) {
                obj['work_hours_end'] = ApiClient.convertToType(data['work_hours_end'], 'Number');
            }
            if (data.hasOwnProperty('work_hours_start')) {
                obj['work_hours_start'] = ApiClient.convertToType(data['work_hours_start'], 'Number');
            }
            if (data.hasOwnProperty('work_on_holidays')) {
                obj['work_on_holidays'] = ApiClient.convertToType(data['work_on_holidays'], 'Boolean');
            }
            if (data.hasOwnProperty('works_24_7')) {
                obj['works_24_7'] = ApiClient.convertToType(data['works_24_7'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OpenPlatformpostServicesFields</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OpenPlatformpostServicesFields</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of OpenPlatformpostServicesFields.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['expertise_ids'])) {
            throw new Error("Expected the field `expertise_ids` to be an array in the JSON data but got " + data['expertise_ids']);
        }

        return true;
    }

/**
     * @return {module:model/PostServicesFieldsCategory}
     */
    getCategory() {
        return this.category;
    }

    /**
     * @param {module:model/PostServicesFieldsCategory} category
     */
    setCategory(category) {
        this['category'] = category;
    }
/**
     * Returns List of expertise ids
     * @return {Array.<String>}
     */
    getExpertiseIds() {
        return this.expertise_ids;
    }

    /**
     * Sets List of expertise ids
     * @param {Array.<String>} expertiseIds List of expertise ids
     */
    setExpertiseIds(expertiseIds) {
        this['expertise_ids'] = expertiseIds;
    }
/**
     * Returns End hour of work in 24-hour format (e.g. 18 for 18:00). Only applicable if `works_24_7` is false.
     * @return {Number}
     */
    getWorkHoursEnd() {
        return this.work_hours_end;
    }

    /**
     * Sets End hour of work in 24-hour format (e.g. 18 for 18:00). Only applicable if `works_24_7` is false.
     * @param {Number} workHoursEnd End hour of work in 24-hour format (e.g. 18 for 18:00). Only applicable if `works_24_7` is false.
     */
    setWorkHoursEnd(workHoursEnd) {
        this['work_hours_end'] = workHoursEnd;
    }
/**
     * Returns Start hour of work in 24-hour format (e.g. 9 for 9:00). Only applicable if `works_24_7` is false.
     * @return {Number}
     */
    getWorkHoursStart() {
        return this.work_hours_start;
    }

    /**
     * Sets Start hour of work in 24-hour format (e.g. 9 for 9:00). Only applicable if `works_24_7` is false.
     * @param {Number} workHoursStart Start hour of work in 24-hour format (e.g. 9 for 9:00). Only applicable if `works_24_7` is false.
     */
    setWorkHoursStart(workHoursStart) {
        this['work_hours_start'] = workHoursStart;
    }
/**
     * Returns Whether the service provider works on holidays
     * @return {Boolean}
     */
    getWorkOnHolidays() {
        return this.work_on_holidays;
    }

    /**
     * Sets Whether the service provider works on holidays
     * @param {Boolean} workOnHolidays Whether the service provider works on holidays
     */
    setWorkOnHolidays(workOnHolidays) {
        this['work_on_holidays'] = workOnHolidays;
    }
/**
     * Returns Whether the service provider is available 24/7. If true, `work_hours_start` and `work_hours_end` are ignored.
     * @return {Boolean}
     */
    getWorks247() {
        return this.works_24_7;
    }

    /**
     * Sets Whether the service provider is available 24/7. If true, `work_hours_start` and `work_hours_end` are ignored.
     * @param {Boolean} works247 Whether the service provider is available 24/7. If true, `work_hours_start` and `work_hours_end` are ignored.
     */
    setWorks247(works247) {
        this['works_24_7'] = works247;
    }

}

OpenPlatformpostServicesFields.RequiredProperties = ["category", "expertise_ids", "work_hours_end", "work_hours_start", "work_on_holidays", "works_24_7"];

/**
 * @member {module:model/PostServicesFieldsCategory} category
 */
OpenPlatformpostServicesFields.prototype['category'] = undefined;

/**
 * List of expertise ids
 * @member {Array.<String>} expertise_ids
 */
OpenPlatformpostServicesFields.prototype['expertise_ids'] = undefined;

/**
 * End hour of work in 24-hour format (e.g. 18 for 18:00). Only applicable if `works_24_7` is false.
 * @member {Number} work_hours_end
 */
OpenPlatformpostServicesFields.prototype['work_hours_end'] = undefined;

/**
 * Start hour of work in 24-hour format (e.g. 9 for 9:00). Only applicable if `works_24_7` is false.
 * @member {Number} work_hours_start
 */
OpenPlatformpostServicesFields.prototype['work_hours_start'] = undefined;

/**
 * Whether the service provider works on holidays
 * @member {Boolean} work_on_holidays
 */
OpenPlatformpostServicesFields.prototype['work_on_holidays'] = undefined;

/**
 * Whether the service provider is available 24/7. If true, `work_hours_start` and `work_hours_end` are ignored.
 * @member {Boolean} works_24_7
 */
OpenPlatformpostServicesFields.prototype['works_24_7'] = undefined;






export default OpenPlatformpostServicesFields;

