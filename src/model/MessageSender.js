/**
 * Kenar API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ChatapiMessageSenderSide from './ChatapiMessageSenderSide';
import ChatapiMessageSenderType from './ChatapiMessageSenderType';

/**
 * The MessageSender model module.
 * @module model/MessageSender
 * @version 0.1.0
 */
class MessageSender {
    /**
     * Constructs a new <code>MessageSender</code>.
     * @alias module:model/MessageSender
     */
    constructor() { 
        
        MessageSender.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MessageSender</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MessageSender} obj Optional instance to populate.
     * @return {module:model/MessageSender} The populated <code>MessageSender</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MessageSender();

            if (data.hasOwnProperty('side')) {
                obj['side'] = ChatapiMessageSenderSide.constructFromObject(data['side']);
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ChatapiMessageSenderType.constructFromObject(data['type']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MessageSender</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MessageSender</code>.
     */
    static validateJSON(data) {

        return true;
    }

/**
     * @return {module:model/ChatapiMessageSenderSide}
     */
    getSide() {
        return this.side;
    }

    /**
     * @param {module:model/ChatapiMessageSenderSide} side
     */
    setSide(side) {
        this['side'] = side;
    }
/**
     * @return {module:model/ChatapiMessageSenderType}
     */
    getType() {
        return this.type;
    }

    /**
     * @param {module:model/ChatapiMessageSenderType} type
     */
    setType(type) {
        this['type'] = type;
    }

}



/**
 * @member {module:model/ChatapiMessageSenderSide} side
 */
MessageSender.prototype['side'] = undefined;

/**
 * @member {module:model/ChatapiMessageSenderType} type
 */
MessageSender.prototype['type'] = undefined;






export default MessageSender;

