/**
 * divar_interface/open_platform/chatapi/chatapi.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import GooglerpcStatus from '../model/GooglerpcStatus';
import PaymentGetBalanceResponse from '../model/PaymentGetBalanceResponse';
import PaymentGetPostPricingResponse from '../model/PaymentGetPostPricingResponse';
import PaymentGetTransactionResponse from '../model/PaymentGetTransactionResponse';
import PaymentReorderPostBody from '../model/PaymentReorderPostBody';
import PaymentReorderPostResponse from '../model/PaymentReorderPostResponse';

/**
* Limited service.
* @module api/LimitedApi
* @version 0.1.0
*/
export default class LimitedApi {

    /**
    * Constructs a new LimitedApi. 
    * @alias module:api/LimitedApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * Using this API you can retrieve current balance of your app.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/PaymentGetBalanceResponse} and HTTP response
     */
    paymentGetBalanceWithHttpInfo() {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PaymentGetBalanceResponse;
      return this.apiClient.callApi(
        '/experimental/open-platform/balance', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Using this API you can retrieve current balance of your app.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/PaymentGetBalanceResponse}
     */
    paymentGetBalance() {
      return this.paymentGetBalanceWithHttpInfo()
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Retrieve the cost of the service
     * Using this API and with user permission, you can get the price of various services like Reorder.The price of this API is not necessarily the same as the price on Divar, and pricing may vary.Use this API to get the price before applying services (such as reordering a post).
     * @param {String} postToken An 8-9 character unique identifier for the post
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/PaymentGetPostPricingResponse} and HTTP response
     */
    paymentGetPostPricingWithHttpInfo(postToken) {
      let postBody = null;
      // verify the required parameter 'postToken' is set
      if (postToken === undefined || postToken === null) {
        throw new Error("Missing the required parameter 'postToken' when calling paymentGetPostPricing");
      }

      let pathParams = {
        'post_token': postToken
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PaymentGetPostPricingResponse;
      return this.apiClient.callApi(
        '/v1/open-platform/post/{post_token}/pricing', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Retrieve the cost of the service
     * Using this API and with user permission, you can get the price of various services like Reorder.The price of this API is not necessarily the same as the price on Divar, and pricing may vary.Use this API to get the price before applying services (such as reordering a post).
     * @param {String} postToken An 8-9 character unique identifier for the post
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/PaymentGetPostPricingResponse}
     */
    paymentGetPostPricing(postToken) {
      return this.paymentGetPostPricingWithHttpInfo(postToken)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Using this API you can retrieve transaction details.
     * @param {String} id The unique identifier for the transaction, same as the id in the request
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/PaymentGetTransactionResponse} and HTTP response
     */
    paymentGetTransactionWithHttpInfo(id) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling paymentGetTransaction");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PaymentGetTransactionResponse;
      return this.apiClient.callApi(
        '/experimental/open-platform/transactions/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Using this API you can retrieve transaction details.
     * @param {String} id The unique identifier for the transaction, same as the id in the request
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/PaymentGetTransactionResponse}
     */
    paymentGetTransaction(id) {
      return this.paymentGetTransactionWithHttpInfo(id)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Use GetPostPricing API to get the cost of the service before calling this API.
     * @param {String} postToken 
     * @param {module:model/PaymentReorderPostBody} paymentReorderPostBody 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/PaymentReorderPostResponse} and HTTP response
     */
    paymentReorderPostWithHttpInfo(postToken, paymentReorderPostBody) {
      let postBody = paymentReorderPostBody;
      // verify the required parameter 'postToken' is set
      if (postToken === undefined || postToken === null) {
        throw new Error("Missing the required parameter 'postToken' when calling paymentReorderPost");
      }
      // verify the required parameter 'paymentReorderPostBody' is set
      if (paymentReorderPostBody === undefined || paymentReorderPostBody === null) {
        throw new Error("Missing the required parameter 'paymentReorderPostBody' when calling paymentReorderPost");
      }

      let pathParams = {
        'post_token': postToken
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = PaymentReorderPostResponse;
      return this.apiClient.callApi(
        '/experimental/open-platform/post/{post_token}/reorder', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Use GetPostPricing API to get the cost of the service before calling this API.
     * @param {String} postToken 
     * @param {module:model/PaymentReorderPostBody} paymentReorderPostBody 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/PaymentReorderPostResponse}
     */
    paymentReorderPost(postToken, paymentReorderPostBody) {
      return this.paymentReorderPostWithHttpInfo(postToken, paymentReorderPostBody)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}
