/**
 * Kenar API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AssetsGetBodyStatusesResponse from '../model/AssetsGetBodyStatusesResponse';
import AssetsGetBrandModelsResponse from '../model/AssetsGetBrandModelsResponse';
import AssetsGetCategoriesResponse from '../model/AssetsGetCategoriesResponse';
import AssetsGetCitiesResponse from '../model/AssetsGetCitiesResponse';
import AssetsGetColorsResponse from '../model/AssetsGetColorsResponse';
import AssetsGetDistrictsResponse from '../model/AssetsGetDistrictsResponse';
import AssetsGetInternalStoragesResponse from '../model/AssetsGetInternalStoragesResponse';
import AssetsGetOAuthScopesResponse from '../model/AssetsGetOAuthScopesResponse';
import AssetsGetPermissionsResponse from '../model/AssetsGetPermissionsResponse';
import AssetsGetRamMemoriesResponse from '../model/AssetsGetRamMemoriesResponse';
import AssetsGetServiceTypesResponse from '../model/AssetsGetServiceTypesResponse';
import GooglerpcStatus from '../model/GooglerpcStatus';

/**
* Assets service.
* @module api/AssetsApi
* @version 0.1.0
*/
export default class AssetsApi {

    /**
    * Constructs a new AssetsApi. 
    * @alias module:api/AssetsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * Get available body-status options in Divar vehicle categories
     * Get all available body-status options in Divar vehicle categories.This provides persian translations for each body-status options which used in posts.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/AssetsGetBodyStatusesResponse} and HTTP response
     */
    assetsGetBodyStatusesWithHttpInfo() {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AssetsGetBodyStatusesResponse;
      return this.apiClient.callApi(
        '/v1/open-platform/assets/body-status', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Get available body-status options in Divar vehicle categories
     * Get all available body-status options in Divar vehicle categories.This provides persian translations for each body-status options which used in posts.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/AssetsGetBodyStatusesResponse}
     */
    assetsGetBodyStatuses() {
      return this.assetsGetBodyStatusesWithHttpInfo()
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Get brand models in a Divar category
     * Get all Divar brand models in specified category.This provides persian translations for each brand models which used in posts.
     * @param {String} category 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/AssetsGetBrandModelsResponse} and HTTP response
     */
    assetsGetBrandModelsWithHttpInfo(category) {
      let postBody = null;
      // verify the required parameter 'category' is set
      if (category === undefined || category === null) {
        throw new Error("Missing the required parameter 'category' when calling assetsGetBrandModels");
      }

      let pathParams = {
        'category': category
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AssetsGetBrandModelsResponse;
      return this.apiClient.callApi(
        '/v1/open-platform/assets/brand-model/{category}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Get brand models in a Divar category
     * Get all Divar brand models in specified category.This provides persian translations for each brand models which used in posts.
     * @param {String} category 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/AssetsGetBrandModelsResponse}
     */
    assetsGetBrandModels(category) {
      return this.assetsGetBrandModelsWithHttpInfo(category)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Get Divar categories
     * Get all Divar categories. This provides persian translations for each category which used in posts.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/AssetsGetCategoriesResponse} and HTTP response
     */
    assetsGetCategoriesWithHttpInfo() {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AssetsGetCategoriesResponse;
      return this.apiClient.callApi(
        '/v1/open-platform/assets/category', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Get Divar categories
     * Get all Divar categories. This provides persian translations for each category which used in posts.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/AssetsGetCategoriesResponse}
     */
    assetsGetCategories() {
      return this.assetsGetCategoriesWithHttpInfo()
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Get Divar cities
     * Get all Divar cities. This provides persian translations for each city which used in posts.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/AssetsGetCitiesResponse} and HTTP response
     */
    assetsGetCitiesWithHttpInfo() {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AssetsGetCitiesResponse;
      return this.apiClient.callApi(
        '/v1/open-platform/assets/city', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Get Divar cities
     * Get all Divar cities. This provides persian translations for each city which used in posts.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/AssetsGetCitiesResponse}
     */
    assetsGetCities() {
      return this.assetsGetCitiesWithHttpInfo()
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Get colors in a Divar category
     * Get all Divar colors in specified category.This provides persian translations for each color which used in posts.
     * @param {String} category 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/AssetsGetColorsResponse} and HTTP response
     */
    assetsGetColorsWithHttpInfo(category) {
      let postBody = null;
      // verify the required parameter 'category' is set
      if (category === undefined || category === null) {
        throw new Error("Missing the required parameter 'category' when calling assetsGetColors");
      }

      let pathParams = {
        'category': category
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AssetsGetColorsResponse;
      return this.apiClient.callApi(
        '/v1/open-platform/assets/color/{category}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Get colors in a Divar category
     * Get all Divar colors in specified category.This provides persian translations for each color which used in posts.
     * @param {String} category 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/AssetsGetColorsResponse}
     */
    assetsGetColors(category) {
      return this.assetsGetColorsWithHttpInfo(category)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Get Divar districts
     * Get all Divar districts. This provides persian translations for each district which used in posts.
     * @param {Object} opts Optional parameters
     * @param {String} [citySlug] 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/AssetsGetDistrictsResponse} and HTTP response
     */
    assetsGetDistrictsWithHttpInfo(opts) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'city_slug': opts['citySlug']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AssetsGetDistrictsResponse;
      return this.apiClient.callApi(
        '/v1/open-platform/assets/district', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Get Divar districts
     * Get all Divar districts. This provides persian translations for each district which used in posts.
     * @param {Object} opts Optional parameters
     * @param {String} opts.citySlug 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/AssetsGetDistrictsResponse}
     */
    assetsGetDistricts(opts) {
      return this.assetsGetDistrictsWithHttpInfo(opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Get Divar districts
     * Get all Divar districts. This provides persian translations for each district which used in posts.
     * @param {String} citySlug 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/AssetsGetDistrictsResponse} and HTTP response
     */
    assetsGetDistricts2WithHttpInfo(citySlug) {
      let postBody = null;
      // verify the required parameter 'citySlug' is set
      if (citySlug === undefined || citySlug === null) {
        throw new Error("Missing the required parameter 'citySlug' when calling assetsGetDistricts2");
      }

      let pathParams = {
        'city_slug': citySlug
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AssetsGetDistrictsResponse;
      return this.apiClient.callApi(
        '/v1/open-platform/assets/district/{city_slug}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Get Divar districts
     * Get all Divar districts. This provides persian translations for each district which used in posts.
     * @param {String} citySlug 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/AssetsGetDistrictsResponse}
     */
    assetsGetDistricts2(citySlug) {
      return this.assetsGetDistricts2WithHttpInfo(citySlug)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Get available internal-storage options in Divar mobile/tablet/laptop categories
     * Get all available internal-storage options in Divar mobile categories.This provides persian translations for each internal-storage options which used in posts.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/AssetsGetInternalStoragesResponse} and HTTP response
     */
    assetsGetInternalStoragesWithHttpInfo() {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AssetsGetInternalStoragesResponse;
      return this.apiClient.callApi(
        '/v1/open-platform/assets/internal-storage', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Get available internal-storage options in Divar mobile/tablet/laptop categories
     * Get all available internal-storage options in Divar mobile categories.This provides persian translations for each internal-storage options which used in posts.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/AssetsGetInternalStoragesResponse}
     */
    assetsGetInternalStorages() {
      return this.assetsGetInternalStoragesWithHttpInfo()
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Get KenarDivar OAuth scopes
     * These are available scopes for KenarDivar OAuth2.0. Use scopes in OAuth flow to request access to user data or perform actions on their behalf.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/AssetsGetOAuthScopesResponse} and HTTP response
     */
    assetsGetOAuthScopesWithHttpInfo() {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AssetsGetOAuthScopesResponse;
      return this.apiClient.callApi(
        '/v1/open-platform/assets/oauth-scope', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Get KenarDivar OAuth scopes
     * These are available scopes for KenarDivar OAuth2.0. Use scopes in OAuth flow to request access to user data or perform actions on their behalf.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/AssetsGetOAuthScopesResponse}
     */
    assetsGetOAuthScopes() {
      return this.assetsGetOAuthScopesWithHttpInfo()
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Get KenarDivar permissions
     * These permission are used to control access in KenarDivar Apps. Don't mistake them with OAuth scopes. It's expected that apps be blind about these permissions.These are created for internal usages only, but feel free to request to be enabled for you app as needed.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/AssetsGetPermissionsResponse} and HTTP response
     */
    assetsGetPermissionsWithHttpInfo() {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AssetsGetPermissionsResponse;
      return this.apiClient.callApi(
        '/v1/open-platform/assets/permission', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Get KenarDivar permissions
     * These permission are used to control access in KenarDivar Apps. Don't mistake them with OAuth scopes. It's expected that apps be blind about these permissions.These are created for internal usages only, but feel free to request to be enabled for you app as needed.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/AssetsGetPermissionsResponse}
     */
    assetsGetPermissions() {
      return this.assetsGetPermissionsWithHttpInfo()
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Get available ram-memory options in Divar mobile/tablet/laptop categories
     * Get all available ram-memory options in Divar mobile/tablet/laptop categories.This provides persian translations for each ram-memory options which used in posts.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/AssetsGetRamMemoriesResponse} and HTTP response
     */
    assetsGetRamMemoriesWithHttpInfo() {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AssetsGetRamMemoriesResponse;
      return this.apiClient.callApi(
        '/v1/open-platform/assets/ram-memory', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Get available ram-memory options in Divar mobile/tablet/laptop categories
     * Get all available ram-memory options in Divar mobile/tablet/laptop categories.This provides persian translations for each ram-memory options which used in posts.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/AssetsGetRamMemoriesResponse}
     */
    assetsGetRamMemories() {
      return this.assetsGetRamMemoriesWithHttpInfo()
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Get available service types in KenarDivar
     * These service types is used to group similar services in KenarDivar. Any new idea with new service types are welcome. Feel free to request them as needed.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/AssetsGetServiceTypesResponse} and HTTP response
     */
    assetsGetServiceTypesWithHttpInfo() {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AssetsGetServiceTypesResponse;
      return this.apiClient.callApi(
        '/v1/open-platform/assets/service-type', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Get available service types in KenarDivar
     * These service types is used to group similar services in KenarDivar. Any new idea with new service types are welcome. Feel free to request them as needed.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/AssetsGetServiceTypesResponse}
     */
    assetsGetServiceTypes() {
      return this.assetsGetServiceTypesWithHttpInfo()
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}
