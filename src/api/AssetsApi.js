/**
 * Kenar API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AssetsGetBodyStatusesResponse from '../model/AssetsGetBodyStatusesResponse';
import AssetsGetBrandModelsResponse from '../model/AssetsGetBrandModelsResponse';
import AssetsGetCategoriesResponse from '../model/AssetsGetCategoriesResponse';
import AssetsGetCitiesResponse from '../model/AssetsGetCitiesResponse';
import AssetsGetColorsResponse from '../model/AssetsGetColorsResponse';
import AssetsGetDistrictsResponse from '../model/AssetsGetDistrictsResponse';
import AssetsGetInternalStoragesResponse from '../model/AssetsGetInternalStoragesResponse';
import AssetsGetOAuthScopesResponse from '../model/AssetsGetOAuthScopesResponse';
import AssetsGetPermissionsResponse from '../model/AssetsGetPermissionsResponse';
import AssetsGetRamMemoriesResponse from '../model/AssetsGetRamMemoriesResponse';
import AssetsGetServiceTypesResponse from '../model/AssetsGetServiceTypesResponse';
import AssetsGetSubmitSchemaResponse from '../model/AssetsGetSubmitSchemaResponse';
import GooglerpcStatus from '../model/GooglerpcStatus';

/**
* Assets service.
* @module api/AssetsApi
* @version 0.1.0
*/
export default class AssetsApi {

    /**
    * Constructs a new AssetsApi. 
    * @alias module:api/AssetsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * دریافت گزینه‌های وضعیت بدنه موجود در دسته‌بندی‌های خودرو دیوار
     * دریافت تمام گزینه‌های وضعیت بدنه موجود در دسته‌بندی‌های خودرو دیوار. این ترجمه فارسی برای هر گزینه وضعیت بدنه که در آگهی‌ها استفاده می‌شود، ارائه می‌دهد.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/AssetsGetBodyStatusesResponse} and HTTP response
     */
    assetsGetBodyStatusesWithHttpInfo() {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['APIKey'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AssetsGetBodyStatusesResponse;
      return this.apiClient.callApi(
        '/v1/open-platform/assets/body-status', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * دریافت گزینه‌های وضعیت بدنه موجود در دسته‌بندی‌های خودرو دیوار
     * دریافت تمام گزینه‌های وضعیت بدنه موجود در دسته‌بندی‌های خودرو دیوار. این ترجمه فارسی برای هر گزینه وضعیت بدنه که در آگهی‌ها استفاده می‌شود، ارائه می‌دهد.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/AssetsGetBodyStatusesResponse}
     */
    assetsGetBodyStatuses() {
      return this.assetsGetBodyStatusesWithHttpInfo()
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * دریافت مدل‌های برند در دسته‌بندی دیوار
     * دریافت تمام مدل‌های برند دیوار در دسته‌بندی مشخص شده. این ترجمه فارسی برای هر مدل برند که در آگهی‌ها استفاده می‌شود، ارائه می‌دهد.
     * @param {String} category 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/AssetsGetBrandModelsResponse} and HTTP response
     */
    assetsGetBrandModelsWithHttpInfo(category) {
      let postBody = null;
      // verify the required parameter 'category' is set
      if (category === undefined || category === null) {
        throw new Error("Missing the required parameter 'category' when calling assetsGetBrandModels");
      }

      let pathParams = {
        'category': category
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['APIKey'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AssetsGetBrandModelsResponse;
      return this.apiClient.callApi(
        '/v1/open-platform/assets/brand-model/{category}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * دریافت مدل‌های برند در دسته‌بندی دیوار
     * دریافت تمام مدل‌های برند دیوار در دسته‌بندی مشخص شده. این ترجمه فارسی برای هر مدل برند که در آگهی‌ها استفاده می‌شود، ارائه می‌دهد.
     * @param {String} category 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/AssetsGetBrandModelsResponse}
     */
    assetsGetBrandModels(category) {
      return this.assetsGetBrandModelsWithHttpInfo(category)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * دریافت دسته‌بندی‌های دیوار
     * دریافت تمام دسته‌بندی‌های دیوار. این ترجمه فارسی برای هر دسته‌بندی که در آگهی‌ها استفاده می‌شود، ارائه می‌دهد.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/AssetsGetCategoriesResponse} and HTTP response
     */
    assetsGetCategoriesWithHttpInfo() {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['APIKey'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AssetsGetCategoriesResponse;
      return this.apiClient.callApi(
        '/v1/open-platform/assets/category', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * دریافت دسته‌بندی‌های دیوار
     * دریافت تمام دسته‌بندی‌های دیوار. این ترجمه فارسی برای هر دسته‌بندی که در آگهی‌ها استفاده می‌شود، ارائه می‌دهد.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/AssetsGetCategoriesResponse}
     */
    assetsGetCategories() {
      return this.assetsGetCategoriesWithHttpInfo()
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * دریافت شهرهای دیوار
     * دریافت تمام شهرهای دیوار. این ترجمه فارسی برای هر شهر که در آگهی‌ها استفاده می‌شود، ارائه می‌دهد.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/AssetsGetCitiesResponse} and HTTP response
     */
    assetsGetCitiesWithHttpInfo() {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['APIKey'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AssetsGetCitiesResponse;
      return this.apiClient.callApi(
        '/v1/open-platform/assets/city', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * دریافت شهرهای دیوار
     * دریافت تمام شهرهای دیوار. این ترجمه فارسی برای هر شهر که در آگهی‌ها استفاده می‌شود، ارائه می‌دهد.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/AssetsGetCitiesResponse}
     */
    assetsGetCities() {
      return this.assetsGetCitiesWithHttpInfo()
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * دریافت رنگ‌ها در دسته‌بندی دیوار
     * دریافت تمام رنگ‌های دیوار در دسته‌بندی مشخص شده. این ترجمه فارسی برای هر رنگ که در آگهی‌ها استفاده می‌شود، ارائه می‌دهد.
     * @param {String} category 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/AssetsGetColorsResponse} and HTTP response
     */
    assetsGetColorsWithHttpInfo(category) {
      let postBody = null;
      // verify the required parameter 'category' is set
      if (category === undefined || category === null) {
        throw new Error("Missing the required parameter 'category' when calling assetsGetColors");
      }

      let pathParams = {
        'category': category
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['APIKey'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AssetsGetColorsResponse;
      return this.apiClient.callApi(
        '/v1/open-platform/assets/color/{category}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * دریافت رنگ‌ها در دسته‌بندی دیوار
     * دریافت تمام رنگ‌های دیوار در دسته‌بندی مشخص شده. این ترجمه فارسی برای هر رنگ که در آگهی‌ها استفاده می‌شود، ارائه می‌دهد.
     * @param {String} category 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/AssetsGetColorsResponse}
     */
    assetsGetColors(category) {
      return this.assetsGetColorsWithHttpInfo(category)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * دریافت مناطق دیوار
     * دریافت تمام مناطق دیوار. این ترجمه فارسی برای هر منطقه که در آگهی‌ها استفاده می‌شود، ارائه می‌دهد.
     * @param {Object} opts Optional parameters
     * @param {String} [citySlug] 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/AssetsGetDistrictsResponse} and HTTP response
     */
    assetsGetDistrictsWithHttpInfo(opts) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'city_slug': opts['citySlug']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['APIKey'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AssetsGetDistrictsResponse;
      return this.apiClient.callApi(
        '/v1/open-platform/assets/district', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * دریافت مناطق دیوار
     * دریافت تمام مناطق دیوار. این ترجمه فارسی برای هر منطقه که در آگهی‌ها استفاده می‌شود، ارائه می‌دهد.
     * @param {Object} opts Optional parameters
     * @param {String} opts.citySlug 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/AssetsGetDistrictsResponse}
     */
    assetsGetDistricts(opts) {
      return this.assetsGetDistrictsWithHttpInfo(opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * دریافت مناطق دیوار
     * دریافت تمام مناطق دیوار. این ترجمه فارسی برای هر منطقه که در آگهی‌ها استفاده می‌شود، ارائه می‌دهد.
     * @param {String} citySlug 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/AssetsGetDistrictsResponse} and HTTP response
     */
    assetsGetDistricts2WithHttpInfo(citySlug) {
      let postBody = null;
      // verify the required parameter 'citySlug' is set
      if (citySlug === undefined || citySlug === null) {
        throw new Error("Missing the required parameter 'citySlug' when calling assetsGetDistricts2");
      }

      let pathParams = {
        'city_slug': citySlug
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['APIKey'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AssetsGetDistrictsResponse;
      return this.apiClient.callApi(
        '/v1/open-platform/assets/district/{city_slug}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * دریافت مناطق دیوار
     * دریافت تمام مناطق دیوار. این ترجمه فارسی برای هر منطقه که در آگهی‌ها استفاده می‌شود، ارائه می‌دهد.
     * @param {String} citySlug 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/AssetsGetDistrictsResponse}
     */
    assetsGetDistricts2(citySlug) {
      return this.assetsGetDistricts2WithHttpInfo(citySlug)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * دریافت گزینه‌های حافظه داخلی موجود در دسته‌بندی‌های موبایل/تبلت/لپ‌تاپ دیوار
     * دریافت تمام گزینه‌های حافظه داخلی موجود در دسته‌بندی‌های موبایل دیوار. این ترجمه فارسی برای هر گزینه حافظه داخلی که در آگهی‌ها استفاده می‌شود، ارائه می‌دهد.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/AssetsGetInternalStoragesResponse} and HTTP response
     */
    assetsGetInternalStoragesWithHttpInfo() {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['APIKey'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AssetsGetInternalStoragesResponse;
      return this.apiClient.callApi(
        '/v1/open-platform/assets/internal-storage', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * دریافت گزینه‌های حافظه داخلی موجود در دسته‌بندی‌های موبایل/تبلت/لپ‌تاپ دیوار
     * دریافت تمام گزینه‌های حافظه داخلی موجود در دسته‌بندی‌های موبایل دیوار. این ترجمه فارسی برای هر گزینه حافظه داخلی که در آگهی‌ها استفاده می‌شود، ارائه می‌دهد.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/AssetsGetInternalStoragesResponse}
     */
    assetsGetInternalStorages() {
      return this.assetsGetInternalStoragesWithHttpInfo()
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * دریافت دامنه‌های OAuth کنار دیوار
     * اینها دامنه‌های موجود برای OAuth2.0 کنار دیوار هستند. از دامنه‌ها در جریان OAuth برای درخواست دسترسی به داده‌های کاربر یا انجام اقدامات از طرف آنها استفاده کنید.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/AssetsGetOAuthScopesResponse} and HTTP response
     */
    assetsGetOAuthScopesWithHttpInfo() {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['APIKey'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AssetsGetOAuthScopesResponse;
      return this.apiClient.callApi(
        '/v1/open-platform/assets/oauth-scope', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * دریافت دامنه‌های OAuth کنار دیوار
     * اینها دامنه‌های موجود برای OAuth2.0 کنار دیوار هستند. از دامنه‌ها در جریان OAuth برای درخواست دسترسی به داده‌های کاربر یا انجام اقدامات از طرف آنها استفاده کنید.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/AssetsGetOAuthScopesResponse}
     */
    assetsGetOAuthScopes() {
      return this.assetsGetOAuthScopesWithHttpInfo()
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * دریافت مجوزهای کنار دیوار
     * این مجوزها برای کنترل دسترسی در اپلیکیشن‌های کنار دیوار استفاده می‌شوند. آنها را با دامنه‌های OAuth اشتباه نگیرید. انتظار می‌رود اپلیکیشن‌ها نسبت به این مجوزها کور باشند. اینها فقط برای استفاده‌های داخلی ایجاد شده‌اند، اما در صورت نیاز آزادانه درخواست فعال‌سازی برای اپلیکیشن خود را ارائه دهید.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/AssetsGetPermissionsResponse} and HTTP response
     */
    assetsGetPermissionsWithHttpInfo() {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['APIKey'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AssetsGetPermissionsResponse;
      return this.apiClient.callApi(
        '/v1/open-platform/assets/permission', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * دریافت مجوزهای کنار دیوار
     * این مجوزها برای کنترل دسترسی در اپلیکیشن‌های کنار دیوار استفاده می‌شوند. آنها را با دامنه‌های OAuth اشتباه نگیرید. انتظار می‌رود اپلیکیشن‌ها نسبت به این مجوزها کور باشند. اینها فقط برای استفاده‌های داخلی ایجاد شده‌اند، اما در صورت نیاز آزادانه درخواست فعال‌سازی برای اپلیکیشن خود را ارائه دهید.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/AssetsGetPermissionsResponse}
     */
    assetsGetPermissions() {
      return this.assetsGetPermissionsWithHttpInfo()
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * دریافت گزینه‌های حافظه رم موجود در دسته‌بندی‌های موبایل/تبلت/لپ‌تاپ دیوار
     * دریافت تمام گزینه‌های حافظه رم موجود در دسته‌بندی‌های موبایل/تبلت/لپ‌تاپ دیوار. این ترجمه فارسی برای هر گزینه حافظه رم که در آگهی‌ها استفاده می‌شود، ارائه می‌دهد.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/AssetsGetRamMemoriesResponse} and HTTP response
     */
    assetsGetRamMemoriesWithHttpInfo() {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['APIKey'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AssetsGetRamMemoriesResponse;
      return this.apiClient.callApi(
        '/v1/open-platform/assets/ram-memory', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * دریافت گزینه‌های حافظه رم موجود در دسته‌بندی‌های موبایل/تبلت/لپ‌تاپ دیوار
     * دریافت تمام گزینه‌های حافظه رم موجود در دسته‌بندی‌های موبایل/تبلت/لپ‌تاپ دیوار. این ترجمه فارسی برای هر گزینه حافظه رم که در آگهی‌ها استفاده می‌شود، ارائه می‌دهد.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/AssetsGetRamMemoriesResponse}
     */
    assetsGetRamMemories() {
      return this.assetsGetRamMemoriesWithHttpInfo()
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * دریافت انواع سرویس موجود در کنار دیوار
     * این انواع سرویس برای گروه‌بندی سرویس‌های مشابه در کنار دیوار استفاده می‌شود. هر ایده جدید با انواع سرویس جدید خوشامد است. در صورت نیاز آزادانه درخواست دهید.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/AssetsGetServiceTypesResponse} and HTTP response
     */
    assetsGetServiceTypesWithHttpInfo() {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['APIKey'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AssetsGetServiceTypesResponse;
      return this.apiClient.callApi(
        '/v1/open-platform/assets/service-type', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * دریافت انواع سرویس موجود در کنار دیوار
     * این انواع سرویس برای گروه‌بندی سرویس‌های مشابه در کنار دیوار استفاده می‌شود. هر ایده جدید با انواع سرویس جدید خوشامد است. در صورت نیاز آزادانه درخواست دهید.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/AssetsGetServiceTypesResponse}
     */
    assetsGetServiceTypes() {
      return this.assetsGetServiceTypesWithHttpInfo()
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * دریافت ساختار ثبت
     * این API به شما امکان دریافت ساختار ثبت برای یک نام دسته‌بندی مشخص را می‌دهد. پاسخ در قالب JSON Schema است.  طرح، ساختار و قوانین اعتبارسنجی برای فیلدهای فرم هنگام ثبت آگهی در یک دسته‌بندی خاص را تعریف می‌کند. هر فیلد در طرح می‌تواند یکی از انواع زیر باشد:  **انواع پایه:** - `string`: فیلدهای ورودی متنی (مثل عنوان، توضیحات، مقادیر زمان) - `integer`: فیلدهای ورودی عددی برای اعداد صحیح (مثل قیمت، تعداد، اندازه) - `float`: فیلدهای ورودی عددی برای اعداد اعشاری - `boolean`: فیلدهای چک‌باکس درست/غلط - `array`: فیلدهای چندانتخابی که اجازه انتخاب چندین مقدار را می‌دهند  **فیلدهای Enum:** فیلدهای با گزینه‌های از پیش تعریف شده از ویژگی‌های `enum` و `enumNames` استفاده می‌کنند: - `enum`: آرایه مقادیر داخلی مورد استفاده برای ارتباط API - `enumNames`: آرایه برچسب‌های نمایشی نشان داده شده به کاربران (معمولاً به فارسی) - اینها برای منوهای کشویی تک‌انتخابی استفاده می‌شوند (مثل انتخاب طبقه، وجود پارکینگ)  **فیلدهای Array با Enum:** فیلدهای چندانتخابی `type: \"array\"` را با ویژگی‌های enum ترکیب می‌کنند: - `items.enum`: گزینه‌های موجود برای انتخاب - `items.enumNames`: برچسب‌های نمایشی برای هر گزینه - کاربران می‌توانند چندین مقدار انتخاب کنند (مثل امکانات رفاهی، سیستم‌های گرمایش)  **ویژگی‌های فیلد:** - `title`: نام نمایشی فارسی برای فیلد - `required`: آرایه نام‌های فیلدهایی که باید ارائه شوند - `type`: نوع داده فیلد  **مثال استفاده:** ```json {   \"properties\": {     \"size\": {       \"title\": \"متراژ (متر مربع)\",       \"type\": \"integer\"     },     \"elevator\": {       \"enum\": [\"دارد\", \"ندارد\"],       \"enumNames\": [\"دارد\", \"ندارد\"],       \"title\": \"آسانسور\",       \"type\": \"string\"     },     \"comfort_amenities\": {       \"items\": {         \"enum\": [\"اینترنت_پرسرعت\", \"تلویزیون\"],         \"enumNames\": [\"اینترنت پرسرعت\", \"تلویزیون\"],         \"type\": \"string\"       },       \"title\": \"امکانات رفاهی\",       \"type\": \"array\"     }   } } ```
     * @param {String} categorySlug 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/AssetsGetSubmitSchemaResponse} and HTTP response
     */
    assetsGetSubmitSchemaWithHttpInfo(categorySlug) {
      let postBody = null;
      // verify the required parameter 'categorySlug' is set
      if (categorySlug === undefined || categorySlug === null) {
        throw new Error("Missing the required parameter 'categorySlug' when calling assetsGetSubmitSchema");
      }

      let pathParams = {
        'category_slug': categorySlug
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['APIKey'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AssetsGetSubmitSchemaResponse;
      return this.apiClient.callApi(
        '/v1/open-platform/assets/submit-schema/{category_slug}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * دریافت ساختار ثبت
     * این API به شما امکان دریافت ساختار ثبت برای یک نام دسته‌بندی مشخص را می‌دهد. پاسخ در قالب JSON Schema است.  طرح، ساختار و قوانین اعتبارسنجی برای فیلدهای فرم هنگام ثبت آگهی در یک دسته‌بندی خاص را تعریف می‌کند. هر فیلد در طرح می‌تواند یکی از انواع زیر باشد:  **انواع پایه:** - `string`: فیلدهای ورودی متنی (مثل عنوان، توضیحات، مقادیر زمان) - `integer`: فیلدهای ورودی عددی برای اعداد صحیح (مثل قیمت، تعداد، اندازه) - `float`: فیلدهای ورودی عددی برای اعداد اعشاری - `boolean`: فیلدهای چک‌باکس درست/غلط - `array`: فیلدهای چندانتخابی که اجازه انتخاب چندین مقدار را می‌دهند  **فیلدهای Enum:** فیلدهای با گزینه‌های از پیش تعریف شده از ویژگی‌های `enum` و `enumNames` استفاده می‌کنند: - `enum`: آرایه مقادیر داخلی مورد استفاده برای ارتباط API - `enumNames`: آرایه برچسب‌های نمایشی نشان داده شده به کاربران (معمولاً به فارسی) - اینها برای منوهای کشویی تک‌انتخابی استفاده می‌شوند (مثل انتخاب طبقه، وجود پارکینگ)  **فیلدهای Array با Enum:** فیلدهای چندانتخابی `type: \"array\"` را با ویژگی‌های enum ترکیب می‌کنند: - `items.enum`: گزینه‌های موجود برای انتخاب - `items.enumNames`: برچسب‌های نمایشی برای هر گزینه - کاربران می‌توانند چندین مقدار انتخاب کنند (مثل امکانات رفاهی، سیستم‌های گرمایش)  **ویژگی‌های فیلد:** - `title`: نام نمایشی فارسی برای فیلد - `required`: آرایه نام‌های فیلدهایی که باید ارائه شوند - `type`: نوع داده فیلد  **مثال استفاده:** ```json {   \"properties\": {     \"size\": {       \"title\": \"متراژ (متر مربع)\",       \"type\": \"integer\"     },     \"elevator\": {       \"enum\": [\"دارد\", \"ندارد\"],       \"enumNames\": [\"دارد\", \"ندارد\"],       \"title\": \"آسانسور\",       \"type\": \"string\"     },     \"comfort_amenities\": {       \"items\": {         \"enum\": [\"اینترنت_پرسرعت\", \"تلویزیون\"],         \"enumNames\": [\"اینترنت پرسرعت\", \"تلویزیون\"],         \"type\": \"string\"       },       \"title\": \"امکانات رفاهی\",       \"type\": \"array\"     }   } } ```
     * @param {String} categorySlug 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/AssetsGetSubmitSchemaResponse}
     */
    assetsGetSubmitSchema(categorySlug) {
      return this.assetsGetSubmitSchemaWithHttpInfo(categorySlug)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}
